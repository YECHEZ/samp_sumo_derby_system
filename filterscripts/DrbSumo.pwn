//==============================================================================
//~~~~~~~~~~~~~~~~~~~~~~~~ СКРИПТ СИСТЕМЫ ДЕРБИ-СУМО ~~~~~~~~~~~~~~~~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~~~~~~ http://gnr-samp.ru/ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//          Идея создания и карта: MAN
//          Программирование: Remarion
//==============================================================================

#include <a_samp>
#include <streamer>

//==============================================================================
//                            Настройки скрипта
//==============================================================================

#define FS11INS 2 //тип сервера:
//                //FS11INS 1 - стандартный сервер
//                //FS11INS 2 - Drift + DM сервер от [Gn_R],
//                //            Drift non-DM сервер от [Gn_R],
//                //            или реновация RDS сервера от [Gn_R]

#undef MAX_PLAYERS
#define MAX_PLAYERS 101 //максимум игроков на сервере + 1 (если 50 игроков, то пишем 51 !!!)

//   ВНИМАНИЕ !!! после изменения настроек ОБЯЗАТЕЛЬНО откомпилировать !!!

//------------------------------------------------------------------------------

//   ВНИМАНИЕ !!! Это изменение нужно делать ТОЛЬКО на стандартном сервере !!!
//   На серверах от [Gn_R] это изменение делать НЕ НУЖНО !!!
//   Если в моде есть удаление любого транспорта, то ПЕРЕД удалением
//   любого транспорта (в моде) необходимо добавить строки:

//		new carplay = GetPlayerVehicleID(playerid);
//		if(CallRemoteFunction("dssysvehfunc", "d", carplay) != 0)//чтение ИД транспорта из системы дерби-сумо
//		{
//			SendClientMessage(playerid, 0xFF0000FF, " Нельзя ! Это транспорт системы дерби-сумо !");
//			return 1;
//		}

//   что бы исключить возможность удаления транспорта системы дерби-сумо !!!

//------------------------------------------------------------------------------

//   ВНИМАНИЕ !!! Это изменение нужно делать ТОЛЬКО на стандартном сервере !!!
//   На серверах от [Gn_R] это изменение делать НЕ НУЖНО !!!
//   Что бы отключить команды мода сервера, нужно ДО отключаемых команд
//   (в моде) добавить строки:

//		if(CallRemoteFunction("dssysplfunc", "d", playerid) != 0)//чтение статуса участника из системы дерби-сумо
//		{
//			SendClientMessage(playerid, 0xFF0000FF, " В системе дерби-сумо команды не работают !");
//			return 1;
//		}

//------------------------------------------------------------------------------

//   ВНИМАНИЕ !!! Это изменение нужно делать ТОЛЬКО на стандартном сервере !!!
//   На серверах от [Gn_R] это изменение делать НЕ НУЖНО !!!
//   Что бы отключить меню мода сервера, нужно ДО функции вывода главного
//   меню "ShowPlayerDialog" (в моде, в паблике "OnPlayerKeyStateChange") добавить строки:

//		if(CallRemoteFunction("dssysplfunc", "d", playerid) != 0)//чтение статуса участника из системы дерби-сумо
//		{
//			SendClientMessage(playerid, 0xFF0000FF, " В системе дерби-сумо игровое меню не работает !");
//			return 1;
//		}

//------------------------------------------------------------------------------

//   ВНИМАНИЕ !!! Это изменение нужно делать ТОЛЬКО на стандартном сервере !!!
//   На серверах от [Gn_R] это изменение делать НЕ НУЖНО !!!
//   Что бы была возможность отключения авторемонта в моде сервера, нужно внутри функции
//   авторемонта сервера добавить в условие авторемонта переменную "PlConRepDS", пример:
//
//		public RepairCar()//паблик авторемонтов траспортов (вызывается таймером 1 раз за 1-2 секунды)
//		{
//    		for(new i=0;i<MAX_PLAYERS;i++)
//			{
// 				if(IsPlayerConnected(i))
// 				{
//					if(autorepair[i] == 1 && GetPlayerState(i) == 2 && DerbyID[i] == 0 && GetPVarInt(i, "PlConRepDS") == 0)//если
//					{//авторемонт включен, И игрок на месте водителя, И игрок не в зоне дерби, И нет удалённого отключения, то:
// 						new car = GetPlayerVehicleID(i);
// 						RepairVehicle(car);
// 						SetVehicleHealth(car,1000);
// 					}
//				}
//			}
//			return 1;
//		}

//==============================================================================

//==============================================================================

#if (FS11INS < 1)
	#undef FS11INS
	#define FS11INS 1
#endif
#if (FS11INS > 2)
	#undef FS11INS
	#define FS11INS 2
#endif

#define COLOR_GREY 0xAFAFAFFF
#define COLOR_GRAD2 0xBFC0C2FF
#define COLOR_GREEN 0x00FF00FF
#define COLOR_RED 0xFF0000FF
#define COLOR_YELLOW 0xFFFF00FF
#define COLOR_BIR 0x00FFFFFF

forward OneSec();//секундный таймер
forward SendDSMessage(color, string[]);//сообщения внутри дерби-сумо

#if (FS11INS == 1)
	new dlgcont[MAX_PLAYERS];//контроль ИД диалога
#endif
new onesectimer;//переменная таймера
new dsstate[MAX_PLAYERS];//дерби-сумо статус игрока
new dsgen1;//общее число дрифтеров
new dsgen2;//общее число полицейских
new dsgen3;//общее число колхозников
new Float:dsplayspax[9] = {-978.92, -893.01, -979.37, -1065.82, -936.55, -904.52,
	-1022.53, -1054.07, -1022.39};//координаты x случайного ТП игрока на дерби-сумо
new Float:dsplayspay[9] = {-992.79, -1080.82, -1166.52, -1080.17, -1006.49, -1123.77,
	-1155.02, -1037.27, -1005.61};//координаты y случайного ТП игрока на дерби-сумо
new Float:dsplayspaz[9] = {2013.88, 2013.88, 2013.88, 2013.88, 2013.88, 2013.88,
	2013.88, 2013.88, 2013.88};//координаты z случайного ТП игрока на дерби-сумо
new Float:dspickupx[9] = {-1083.56, -873.69, -989.00, -917.58, -918.84, -1040.68,
	-1040.39, -959.37, -998.90};//координаты x случайного спавна бонус-пикапа
new Float:dspickupy[9] = {-1087.47, -1089.10, -975.73, -1018.96, -1141.06, -1141.53,
	-1019.17, -1060.47, -1099.98};//координаты y случайного спавна бонус-пикапа
new Float:dspickupz[9] = {1990.68, 1990.68, 2026.00, 2003.88, 2003.88, 2003.88,
	2003.88, 2003.88, 2003.88};//координаты z случайного спавна бонус-пикапа
new dsPickupID[3];//ИДы пикапов-бонусов
new dsPickupID22[3];//типы пикапов-бонусов (по ИД модели пикапа)
new dsPickupID44[3];//условные позиции спавнов пикапов-бонусов
new dsPickupcount;//число рабочих пикапов-бонусов
new dsPickupcount44;//переменная задержки
new dsPickupspawn[5] = {19054, 19055, 19056, 19057, 19058};//ИДы моделей пикапов-бонусов для спавна
new dsbonus[MAX_PLAYERS];//ИД бонуса игрока
new Float:corpl[MAX_PLAYERS][3];//координаты возврата на основную карту
new mapcolpl[MAX_PLAYERS];//цвет маркера игрока
new dscarid[MAX_PLAYERS];//ИД транспорта участника дерби-сумо
new dscarmodel[MAX_PLAYERS];//модель транспорта участника дерби-сумо
new dslock[MAX_PLAYERS];//блокировка контроля игрока
new dsidpara1[MAX_PLAYERS];//ИД параметров (между окнами меню)
new dslive[MAX_PLAYERS];//жизни игроков
new PlayerText:CountLive[MAX_PLAYERS];//текст-дравы жизней игроков
new Text:Live;
new moveobj;//ИД вращающегося объекта
new posmoveobj;//позиция вращающегося объекта
new PickupIDin[2];//ИДы внутренних пикапов-телепортов
new conconTD[MAX_PLAYERS];//блокировка создания текст-дравов при подключении игрока

public OnFilterScriptInit()
{
	print(" ");
	print("--------------------------------------");
	print("         Filterscript DrbSumo           ");
	print("--------------------------------------\n");

	CreateDynamicObject(8558, -1019.709, -1021.488, 2001.339,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -979.1815, -1021.488, 2001.339,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -938.7, -1021.488, 2001.339,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -920.4171, -1040.167, 2001.349,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -920.4171, -1080.563, 2001.359,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -920.4171, -1120.957, 2001.349,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -938.96, -1139.323, 2001.339,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -979.4571, -1139.323, 2001.339,   0.00000, 0.00000, 179.99451, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1019.934, -1139.323, 2001.339,   0.00000, 0.00000, 179.99451, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1038.25, -1120.809, 2001.349,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1038.25, -1080.409, 2001.359,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1038.25, -1040.013, 2001.349,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1019.633, -1080.415, 2001.339,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -939.0701, -1080.415, 2001.339,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -979.3412, -1120.671, 2001.359,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -979.3412, -1040.1, 2001.359,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(1634, -979.4024, -1056.996, 2003.748,   0.00000, 0.00000, 180.00000, -1, -1, -1, 500);
	CreateDynamicObject(1634, -1002.755, -1080.483, 2003.748,   0.00000, 0.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(1634, -979.2781, -1103.787, 2003.748,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(1634, -955.9445, -1080.384, 2003.748,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1018.613, -1060.109, 2001.359,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1016.609, -1060.772, 2001.339,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -999.9398, -1041.13, 2001.329,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -998.9773, -1043.146, 2001.359,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -983.9256, -1075.812, 2001.369,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -974.7622, -1085.002, 2001.349,   0.00000, 0.00000, 135.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -940.069, -1100.679, 2001.359,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -942.0868, -1100.018, 2001.339,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -959.7051, -1117.659, 2001.359,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -983.9394, -1084.968, 2001.339,   0.00000, 0.00000, 225.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1018.613, -1100.508, 2001.359,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1018.613, -1132.598, 2001.349,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1016.622, -1100.038, 2001.339,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -999.5175, -1119.68, 2001.329,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -998.9773, -1117.666, 2001.359,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -940.069, -1060.278, 2001.359,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -940.069, -1132.22, 2001.349,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -979.3412, -1140.316, 2001.349,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -959.7051, -1139.346, 2001.349,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -942.083, -1060.772, 2001.339,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -974.7441, -1075.794, 2001.349,   0.00000, 0.00000, 225.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -959.7051, -1043.135, 2001.359,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -958.9885, -1041.13, 2001.329,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -958.9832, -1119.68, 2001.329,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1076.555, -1075.315, 2001.359,   0.03000, 0.00000, -3.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1076.688, -1080.41, 2001.359,   0.03000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1076.155, -1070.235, 2001.359,   0.02000, 0.00000, -6.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1075.47, -1065.18, 2001.359,   0.02000, 0.00000, -9.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1074.561, -1060.171, 2001.359,   0.02000, 0.00000, -12.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1073.371, -1055.215, 2001.359,   0.02000, 0.00000, -15.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1071.924, -1050.329, 2001.359,   0.02000, 0.00000, -18.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1070.222, -1045.525, 2001.359,   0.02000, 0.00000, -21.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1068.272, -1040.816, 2001.359,   0.02000, 0.00000, -24.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1066.078, -1036.217, 2001.359,   0.02000, 0.00000, -27.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1063.646, -1031.738, 2001.359,   0.02000, 0.00000, -30.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1060.983, -1027.392, 2001.359,   0.02000, 0.00000, -33.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1058.097, -1023.192, 2001.359,   0.02000, 0.00000, -36.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1054.994, -1019.149, 2001.359,   0.02000, 0.00000, -39.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1051.685, -1015.274, 2001.359,   0.02000, 0.00000, -42.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1048.177, -1011.577, 2001.359,   0.02000, 0.00000, -45.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1044.48, -1008.069, 2001.359,   0.02000, 0.00000, -48.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1040.604, -1004.759, 2001.359,   0.02000, 0.00000, -51.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1036.561, -1001.657, 2001.359,   0.02000, 0.00000, -54.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1032.361, -998.77, 2001.359,   0.02000, 0.00000, -57.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1028.016, -996.1072, 2001.359,   0.02000, 0.00000, -60.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1023.537, -993.6753, 2001.359,   0.02000, 0.00000, -63.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1018.937, -991.4815, 2001.359,   0.02000, 0.00000, -66.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1014.229, -989.531, 2001.359,   0.02000, 0.00000, -69.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1009.425, -987.8298, 2001.359,   0.02000, 0.00000, -72.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1004.538, -986.3823, 2001.359,   0.02000, 0.00000, -75.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -999.5825, -985.1926, 2001.359,   0.02000, 0.00000, -78.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -994.5715, -984.2639, 2001.359,   0.02000, 0.00000, -81.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -989.5188, -983.5986, 2001.359,   0.02000, 0.00000, -84.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -984.4382, -983.199, 2001.359,   0.02000, 0.00000, -87.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -979.3435, -983.0654, 2001.359,   0.02000, 0.00000, -90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -974.249, -983.199, 2001.359,   0.02000, 0.00000, -93.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -969.1682, -983.5986, 2001.359,   0.02000, 0.00000, 264.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -964.1155, -984.2639, 2001.359,   0.02000, 0.00000, -99.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -959.1045, -985.1926, 2001.359,   0.02000, 0.00000, -102.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -954.1489, -986.3823, 2001.359,   0.02000, 0.00000, -105.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -949.2625, -987.8298, 2001.359,   0.02000, 0.00000, -108.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -944.4585, -989.531, 2001.359,   0.02000, 0.00000, -111.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -939.75, -991.4815, 2001.359,   0.02000, 0.00000, 245.99490, -1, -1, -1, 500);
	CreateDynamicObject(8558, -935.1504, -993.6748, 2001.359,   0.02000, 0.00000, 242.99561, -1, -1, -1, 500);
	CreateDynamicObject(8558, -930.6719, -996.1065, 2001.359,   0.02000, 0.00000, 239.99631, -1, -1, -1, 500);
	CreateDynamicObject(8558, -926.3262, -998.7695, 2001.359,   0.02000, 0.00000, 236.99710, -1, -1, -1, 500);
	CreateDynamicObject(8558, -922.126, -1001.656, 2001.359,   0.02000, 0.00000, -126.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -918.0828, -1004.759, 2001.359,   0.02000, 0.00000, -129.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -914.2075, -1008.069, 2001.359,   0.02000, 0.00000, -132.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -910.5107, -1011.577, 2001.359,   0.02000, 0.00000, -135.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -907.0029, -1015.273, 2001.359,   0.02000, 0.00000, 221.99519, -1, -1, -1, 500);
	CreateDynamicObject(8558, -903.6926, -1019.149, 2001.359,   0.02000, 0.00000, -141.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -900.5908, -1023.192, 2001.359,   0.02000, 0.00000, 215.99670, -1, -1, -1, 500);
	CreateDynamicObject(8558, -897.7036, -1027.392, 2001.359,   0.02000, 0.00000, -147.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -895.0408, -1031.738, 2001.359,   0.02000, 0.00000, -150.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -892.6094, -1036.216, 2001.359,   0.02000, 0.00000, 206.99890, -1, -1, -1, 500);
	CreateDynamicObject(8558, -890.415, -1040.816, 2001.359,   0.02000, 0.00000, -156.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -888.4648, -1045.524, 2001.359,   0.02000, 0.00000, 200.99490, -1, -1, -1, 500);
	CreateDynamicObject(8558, -886.7634, -1050.329, 2001.359,   0.02000, 0.00000, -162.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -885.3162, -1055.215, 2001.359,   0.02000, 0.00000, -165.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -884.1265, -1060.171, 2001.359,   0.02000, 0.00000, -168.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -883.2011, -1065.162, 2001.359,   0.02000, 0.00000, -171.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -882.5325, -1070.235, 2001.359,   0.02000, 0.00000, -174.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -882.1326, -1075.315, 2001.359,   0.02000, 0.00000, -177.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -881.999, -1080.41, 2001.359,   0.02000, 0.00000, -180.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -882.1326, -1085.505, 2001.359,   0.02000, 0.00000, -183.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -882.5332, -1090.585, 2001.359,   0.02000, 0.00000, 173.99600, -1, -1, -1, 500);
	CreateDynamicObject(8558, -883.1975, -1095.638, 2001.359,   0.02000, 0.00000, -189.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -884.1265, -1100.649, 2001.359,   0.02000, 0.00000, -192.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -885.3164, -1105.604, 2001.359,   0.02000, 0.00000, 164.99820, -1, -1, -1, 500);
	CreateDynamicObject(8558, -886.7634, -1110.491, 2001.359,   0.02000, 0.00000, -198.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -888.4646, -1115.295, 2001.359,   0.02000, 0.00000, -201.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -890.415, -1120.003, 2001.359,   0.02000, 0.00000, -204.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -892.6091, -1124.603, 2001.359,   0.02000, 0.00000, -207.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -895.0408, -1129.082, 2001.359,   0.02000, 0.00000, -210.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -897.7036, -1133.427, 2001.359,   0.02000, 0.00000, -213.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -900.5903, -1137.627, 2001.359,   0.02000, 0.00000, -216.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -903.6926, -1141.671, 2001.359,   0.02000, 0.00000, -219.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -907.0024, -1145.546, 2001.359,   0.02000, 0.00000, -222.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -910.5107, -1149.243, 2001.359,   0.02000, 0.00000, -225.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -914.2075, -1152.751, 2001.359,   0.02000, 0.00000, -228.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -918.0828, -1156.061, 2001.359,   0.02000, 0.00000, -231.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -922.126, -1159.163, 2001.359,   0.02000, 0.00000, -234.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -926.3259, -1162.05, 2001.359,   0.02000, 0.00000, -237.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -930.6714, -1164.713, 2001.359,   0.02000, 0.00000, -240.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -935.1501, -1167.145, 2001.359,   0.02000, 0.00000, -243.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -939.75, -1169.338, 2001.359,   0.02000, 0.00000, -246.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -944.4585, -1171.289, 2001.359,   0.02000, 0.00000, -249.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -949.2625, -1172.99, 2001.359,   0.02000, 0.00000, -252.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -954.1489, -1174.438, 2001.359,   0.02000, 0.00000, -255.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -959.1045, -1175.627, 2001.359,   0.02000, 0.00000, -258.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -964.1155, -1176.556, 2001.359,   0.02000, 0.00000, -261.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -969.1682, -1177.221, 2001.359,   0.02000, 0.00000, -264.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -974.249, -1177.621, 2001.359,   0.02000, 0.00000, -267.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -979.3435, -1177.754, 2001.359,   0.02000, 0.00000, -270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -984.4492, -1177.637, 2001.359,   0.02000, 0.00000, -273.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -989.5188, -1177.221, 2001.359,   0.02000, 0.00000, -276.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -994.5715, -1176.556, 2001.359,   0.02000, 0.00000, -279.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -999.5825, -1175.627, 2001.359,   0.02000, 0.00000, -282.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1004.538, -1174.438, 2001.359,   0.02000, 0.00000, -285.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1009.425, -1172.99, 2001.359,   0.02000, 0.00000, -288.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1014.229, -1171.289, 2001.359,   0.02000, 0.00000, -291.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1018.937, -1169.338, 2001.359,   0.02000, 0.00000, -294.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1023.537, -1167.145, 2001.359,   0.02000, 0.00000, -297.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1028.016, -1164.713, 2001.359,   0.02000, 0.00000, -300.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1032.361, -1162.05, 2001.359,   0.02000, 0.00000, -303.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1036.561, -1159.163, 2001.359,   0.02000, 0.00000, -306.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1040.604, -1156.061, 2001.359,   0.02000, 0.00000, -309.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1044.48, -1152.751, 2001.359,   0.02000, 0.00000, -312.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1048.177, -1149.243, 2001.359,   0.02000, 0.00000, -315.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1051.685, -1145.546, 2001.359,   0.02000, 0.00000, -318.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1054.994, -1141.671, 2001.359,   0.02000, 0.00000, -321.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1058.097, -1137.627, 2001.359,   0.02000, 0.00000, -324.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1060.983, -1133.427, 2001.359,   0.02000, 0.00000, -327.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1063.646, -1129.082, 2001.359,   0.02000, 0.00000, -330.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1066.078, -1124.603, 2001.359,   0.02000, 0.00000, -333.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1068.272, -1120.003, 2001.359,   0.02000, 0.00000, -336.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1070.222, -1115.295, 2001.359,   0.02000, 0.00000, -339.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1071.924, -1110.491, 2001.359,   0.02000, 0.00000, -342.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1073.371, -1105.604, 2001.359,   0.02000, 0.00000, 14.99630, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1074.562, -1100.648, 2001.359,   0.02000, 0.00000, 11.99710, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1075.49, -1095.638, 2001.359,   0.02000, 0.00000, -351.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1076.155, -1090.585, 2001.359,   0.02000, 0.00000, -354.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1076.555, -1085.505, 2001.359,   0.03000, 0.00000, -357.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1003.034, -1078.787, 1988.159,   0.03000, 0.00000, 359.99979, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1002.52, -1083.677, 1988.159,   0.03000, 0.00000, 371.99979, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1001, -1088.354, 1988.159,   0.03000, 0.00000, 383.99979, -1, -1, -1, 500);
	CreateDynamicObject(8558, -998.542, -1092.611, 1988.159,   0.03000, 0.00000, 35.99670, -1, -1, -1, 500);
	CreateDynamicObject(8558, -995.2519, -1096.266, 1988.159,   0.03000, 0.00000, 407.99979, -1, -1, -1, 500);
	CreateDynamicObject(8558, -991.2739, -1099.156, 1988.159,   0.03000, 0.00000, 419.99979, -1, -1, -1, 500);
	CreateDynamicObject(8558, -986.782, -1101.156, 1988.159,   0.03000, 0.00000, 431.99979, -1, -1, -1, 500);
	CreateDynamicObject(8558, -981.9727, -1102.179, 1988.159,   0.03000, 0.00000, 83.99600, -1, -1, -1, 500);
	CreateDynamicObject(8558, -977.0552, -1102.179, 1988.159,   0.03000, 0.00000, 455.99979, -1, -1, -1, 500);
	CreateDynamicObject(8558, -972.2456, -1101.156, 1988.159,   0.03000, 0.00000, 107.99980, -1, -1, -1, 500);
	CreateDynamicObject(8558, -967.7534, -1099.156, 1988.159,   0.03000, 0.00000, 119.99980, -1, -1, -1, 500);
	CreateDynamicObject(8558, -963.7754, -1096.266, 1988.159,   0.03000, 0.00000, 491.99979, -1, -1, -1, 500);
	CreateDynamicObject(8558, -960.4854, -1092.612, 1988.159,   0.03000, 0.00000, 503.99979, -1, -1, -1, 500);
	CreateDynamicObject(8558, -958.0273, -1088.354, 1988.159,   0.03000, 0.00000, 155.99490, -1, -1, -1, 500);
	CreateDynamicObject(8558, -956.5078, -1083.677, 1988.159,   0.03000, 0.00000, 167.99741, -1, -1, -1, 500);
	CreateDynamicObject(8558, -955.9932, -1078.787, 1988.159,   0.03000, 0.00000, 179.99451, -1, -1, -1, 500);
	CreateDynamicObject(8558, -956.5073, -1073.897, 1988.159,   0.03000, 0.00000, 191.99980, -1, -1, -1, 500);
	CreateDynamicObject(8558, -958.0266, -1069.221, 1988.159,   0.03000, 0.00000, 563.99982, -1, -1, -1, 500);
	CreateDynamicObject(8558, -960.4851, -1064.962, 1988.159,   0.03000, 0.00000, 575.99982, -1, -1, -1, 500);
	CreateDynamicObject(8558, -963.7754, -1061.308, 1988.159,   0.03000, 0.00000, 587.99982, -1, -1, -1, 500);
	CreateDynamicObject(8558, -967.7539, -1058.418, 1988.159,   0.03000, 0.00000, 239.99980, -1, -1, -1, 500);
	CreateDynamicObject(8558, -972.2461, -1056.418, 1988.159,   0.03000, 0.00000, 251.99890, -1, -1, -1, 500);
	CreateDynamicObject(8558, -977.0557, -1055.396, 1988.159,   0.03000, 0.00000, 263.99600, -1, -1, -1, 500);
	CreateDynamicObject(8558, -981.9719, -1055.396, 1988.159,   0.03000, 0.00000, 635.99982, -1, -1, -1, 500);
	CreateDynamicObject(8558, -986.7817, -1056.418, 1988.159,   0.03000, 0.00000, 647.99982, -1, -1, -1, 500);
	CreateDynamicObject(8558, -991.2737, -1058.418, 1988.159,   0.03000, 0.00000, 659.99982, -1, -1, -1, 500);
	CreateDynamicObject(8558, -995.2517, -1061.308, 1988.159,   0.03000, 0.00000, 671.99982, -1, -1, -1, 500);
	CreateDynamicObject(8558, -998.542, -1064.962, 1988.159,   0.03000, 0.00000, 683.99982, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1001, -1069.22, 1988.159,   0.03000, 0.00000, 695.99982, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1002.521, -1073.896, 1988.159,   0.03000, 0.00000, 347.99741, -1, -1, -1, 500);
	CreateDynamicObject(8558, -979.063, -1033.773, 1991.209,   90.00000, 90.00000, 270.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -983.9727, -1034.044, 1991.209,   90.00000, 90.00000, 276.31580, -1, -1, -1, 500);
	CreateDynamicObject(8558, -988.8228, -1034.853, 1991.209,   90.00000, 90.00000, 282.63159, -1, -1, -1, 500);
	CreateDynamicObject(8558, -993.5547, -1036.19, 1991.209,   90.00000, 90.00000, 288.94592, -1, -1, -1, 500);
	CreateDynamicObject(8558, -998.1099, -1038.042, 1991.209,   90.00000, 90.00000, 295.26318, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1002.434, -1040.382, 1991.209,   90.00000, 90.00000, 301.57898, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1006.475, -1043.184, 1991.209,   90.00000, 90.00000, 307.89478, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1010.183, -1046.413, 1991.209,   90.00000, 90.00000, 314.21057, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1013.513, -1050.031, 1991.209,   90.00000, 90.00000, 320.52637, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1016.426, -1053.992, 1991.209,   90.00000, 90.00000, 326.84216, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1018.884, -1058.251, 1991.209,   90.00000, 90.00000, 333.15796, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1020.859, -1062.754, 1991.209,   90.00000, 90.00000, 339.47375, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1011.898, -1108.629, 1991.209,   90.00000, 90.00000, 402.63171, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1008.374, -1112.058, 1991.209,   90.00000, 90.00000, 408.94751, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1004.493, -1115.078, 1991.209,   90.00000, 90.00000, 415.26331, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1000.305, -1117.653, 1991.209,   90.00000, 90.00000, 61.57837, -1, -1, -1, 500);
	CreateDynamicObject(8558, -995.8574, -1119.752, 1991.209,   90.00000, 90.00000, 427.89490, -1, -1, -1, 500);
	CreateDynamicObject(8558, -991.2068, -1121.348, 1991.209,   90.00000, 90.00000, 434.21069, -1, -1, -1, 500);
	CreateDynamicObject(8558, -986.4087, -1122.424, 1991.209,   90.00000, 90.00000, 440.52649, -1, -1, -1, 500);
	CreateDynamicObject(8558, -981.5215, -1122.964, 1991.209,   90.00000, 90.00000, 446.84229, -1, -1, -1, 500);
	CreateDynamicObject(8558, -976.6042, -1122.964, 1991.209,   90.00000, 90.00000, 453.15808, -1, -1, -1, 500);
	CreateDynamicObject(8558, -971.717, -1122.424, 1991.209,   90.00000, 90.00000, 459.47388, -1, -1, -1, 500);
	CreateDynamicObject(8558, -966.9189, -1121.348, 1991.209,   90.00000, 90.00000, 465.78967, -1, -1, -1, 500);
	CreateDynamicObject(8558, -962.2683, -1119.752, 1991.209,   90.00000, 90.00000, 472.10547, -1, -1, -1, 500);
	CreateDynamicObject(8558, -957.8215, -1117.653, 1991.209,   90.00000, 90.00000, 478.42126, -1, -1, -1, 500);
	CreateDynamicObject(8558, -953.6326, -1115.078, 1991.209,   90.00000, 90.00000, 484.73706, -1, -1, -1, 500);
	CreateDynamicObject(8558, -949.7522, -1112.058, 1991.209,   90.00000, 90.00000, 491.05286, -1, -1, -1, 500);
	CreateDynamicObject(8558, -946.2278, -1108.629, 1991.209,   90.00000, 90.00000, 497.36865, -1, -1, -1, 500);
	CreateDynamicObject(8558, -937.2668, -1062.753, 1991.209,   90.00000, 90.00000, 560.52661, -1, -1, -1, 500);
	CreateDynamicObject(8558, -939.2422, -1058.25, 1991.209,   90.00000, 90.00000, 566.84241, -1, -1, -1, 500);
	CreateDynamicObject(8558, -941.7007, -1053.992, 1991.209,   90.00000, 90.00000, 573.15820, -1, -1, -1, 500);
	CreateDynamicObject(8558, -944.6128, -1050.03, 1991.209,   90.00000, 90.00000, 579.47400, -1, -1, -1, 500);
	CreateDynamicObject(8558, -947.9431, -1046.413, 1991.209,   90.00000, 90.00000, 585.78979, -1, -1, -1, 500);
	CreateDynamicObject(8558, -951.6511, -1043.183, 1991.209,   90.00000, 90.00000, 592.10559, -1, -1, -1, 500);
	CreateDynamicObject(8558, -955.6919, -1040.382, 1991.209,   90.00000, 90.00000, 598.42139, -1, -1, -1, 500);
	CreateDynamicObject(8558, -960.0164, -1038.041, 1991.209,   90.00000, 90.00000, 604.73718, -1, -1, -1, 500);
	CreateDynamicObject(8558, -964.572, -1036.191, 1991.209,   90.00000, 90.00000, 611.05298, -1, -1, -1, 500);
	CreateDynamicObject(8558, -969.3037, -1034.853, 1991.209,   90.00000, 90.00000, 617.36877, -1, -1, -1, 500);
	CreateDynamicObject(8558, -974.1536, -1034.044, 1991.209,   90.00000, 90.00000, 623.68457, -1, -1, -1, 500);
	CreateDynamicObject(8558, -979.0632, -1033.773, 1991.209,   90.00000, 90.00000, 630.00037, -1, -1, -1, 500);
	CreateDynamicObject(8558, -927.1834, -1119.68, 2001.339,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -920.6901, -1100.038, 2001.329,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -919.0682, -1080.415, 2001.349,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -920.7328, -1060.772, 2001.329,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -926.9409, -1041.13, 2001.339,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -940.069, -1028.213, 2001.349,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -959.7051, -1021.802, 2001.349,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -979.3412, -1019.741, 2001.349,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -998.9773, -1022.177, 2001.349,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1018.613, -1027.912, 2001.349,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1031.332, -1041.13, 2001.339,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1038.396, -1060.772, 2001.329,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1040.023, -1080.415, 2001.349,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1037.953, -1100.038, 2001.329,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1031.375, -1119.68, 2001.339,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -998.9773, -1139.203, 2001.349,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -934.4319, -1089.746, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -929.3521, -1089.746, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -924.2722, -1089.746, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -919.1924, -1089.746, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -914.1125, -1089.746, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -909.0327, -1089.746, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -903.9529, -1089.746, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -898.873, -1089.746, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -893.7932, -1089.746, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -888.7134, -1089.746, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -883.6335, -1089.746, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -878.5537, -1089.746, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -873.4739, -1089.746, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -938.1299, -1090.977, 1988.139,   0.00000, 0.00000, 179.99741, -1, -1, -1, 500);
	CreateDynamicObject(8558, -936.0061, -1085.899, 1988.149,   0.00000, 0.00000, 179.99451, -1, -1, -1, 500);
	CreateDynamicObject(8558, -935.1699, -1081.28, 1988.139,   0.00000, 0.00000, 179.99451, -1, -1, -1, 500);
	moveobj = CreateDynamicObject(7504, -979.3382, -1078.941, 1991.234,   0.00000, 0.00000, 0.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1002.307, -1088.653, 1988.139,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1007.398, -1088.653, 1988.139,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1012.489, -1088.653, 1988.139,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1017.58, -1088.653, 1988.139,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1022.671, -1088.653, 1988.139,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1027.762, -1088.653, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1032.853, -1088.653, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1037.944, -1088.653, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1043.035, -1088.653, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1048.126, -1088.653, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1053.218, -1088.653, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1058.309, -1088.653, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1063.4, -1088.653, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1068.491, -1088.653, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1073.582, -1088.653, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1078.673, -1088.653, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1083.764, -1088.653, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1088.855, -1088.652, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1094.016, -1088.652, 1988.976,   18.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1098.671, -1088.652, 1991.348,   36.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1102.365, -1088.652, 1995.042,   54.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1104.737, -1088.652, 1999.697,   72.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1105.554, -1088.652, 2004.857,   90.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1104.737, -1088.652, 2010.017,   108.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1102.365, -1088.652, 2014.672,   126.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1098.671, -1088.652, 2018.367,   144.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1094.016, -1088.652, 2020.739,   162.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -868.3945, -1089.746, 1988.159,   0.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -863.2344, -1089.746, 1988.976,   -18.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -858.5793, -1089.746, 1991.348,   -36.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -854.8853, -1089.746, 1995.042,   -54.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -852.5134, -1089.746, 1999.697,   -72.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -851.696, -1089.746, 2004.857,   -90.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -852.5134, -1089.746, 2010.017,   -108.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -854.8853, -1089.746, 2014.672,   -126.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -858.5793, -1089.746, 2018.367,   -144.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -863.2344, -1089.746, 2020.739,   -162.00000, 0.00000, 90.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -987.6033, -962.4316, 2025.359,   337.00000, 20.00000, 289.19495, -1, -1, -1, 500);
	CreateDynamicObject(8558, -992.3613, -964.2576, 2027.359,   337.00000, 20.00000, 292.79495, -1, -1, -1, 500);
	CreateDynamicObject(8558, -996.9954, -966.3787, 2029.359,   337.00000, 20.00000, 296.39496, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1001.487, -968.7866, 2031.359,   337.00000, 20.00000, 299.99496, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1005.819, -971.4717, 2033.359,   337.00000, 20.00000, 303.59497, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1009.973, -974.4236, 2035.359,   337.00000, 20.00000, 307.19498, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1013.934, -977.6304, 2037.359,   337.00000, 20.00000, 310.79498, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1017.686, -981.0798, 2039.359,   337.00000, 20.00000, 314.39499, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1021.213, -984.7578, 2041.359,   337.00000, 20.00000, 317.99500, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1024.503, -988.6501, 2043.359,   337.00000, 20.00000, 321.59500, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1027.542, -992.7412, 2045.359,   337.00000, 20.00000, 325.19501, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1030.318, -997.0151, 2047.359,   337.00000, 20.00000, 328.79501, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1032.821, -1001.455, 2049.359,   337.00000, 20.00000, 332.39502, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1035.039, -1006.043, 2051.359,   337.00000, 20.00000, 335.99503, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1036.965, -1010.762, 2053.359,   337.00000, 20.00000, 339.59503, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1038.591, -1015.592, 2055.359,   337.00000, 20.00000, 343.19504, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1039.91, -1020.514, 2057.359,   337.00000, 20.00000, 346.79504, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1040.918, -1025.51, 2059.359,   337.00000, 20.00000, 350.39505, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1041.61, -1030.559, 2061.359,   337.00000, 20.00000, 353.99506, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1041.984, -1035.642, 2063.359,   337.00000, 20.00000, 357.59506, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1042.038, -1040.738, 2065.359,   337.00000, 20.00000, 361.19507, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1041.771, -1045.827, 2067.359,   337.00000, 20.00000, 364.79507, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1041.186, -1050.89, 2069.359,   337.00000, 20.00000, 368.39508, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1040.284, -1055.906, 2071.359,   337.00000, 20.00000, 371.99509, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1039.069, -1060.855, 2073.359,   337.00000, 20.00000, 375.59509, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1037.545, -1065.719, 2075.359,   337.00000, 20.00000, 379.19510, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1035.719, -1070.477, 2077.359,   337.00000, 20.00000, 382.79510, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1033.598, -1075.111, 2079.359,   337.00000, 20.00000, 386.39511, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1031.19, -1079.602, 2081.359,   337.00000, 20.00000, 389.99512, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1028.505, -1083.934, 2083.359,   337.00000, 20.00000, 393.59512, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1025.553, -1088.088, 2085.359,   337.00000, 20.00000, 397.19513, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1022.347, -1092.049, 2087.359,   337.00000, 20.00000, 400.79514, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1018.897, -1095.801, 2089.359,   337.00000, 20.00000, 404.39514, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1015.219, -1099.329, 2091.359,   337.00000, 20.00000, 407.99515, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1011.327, -1102.618, 2093.359,   337.00000, 20.00000, 411.59515, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1007.235, -1105.657, 2095.359,   337.00000, 20.00000, 415.19516, -1, -1, -1, 500);
	CreateDynamicObject(8558, -1002.961, -1108.433, 2097.359,   337.00000, 20.00000, 418.79517, -1, -1, -1, 500);
	CreateDynamicObject(8558, -998.5217, -1110.936, 2099.359,   337.00000, 20.00000, 422.39517, -1, -1, -1, 500);
	CreateDynamicObject(8558, -993.9336, -1113.154, 2101.359,   337.00000, 20.00000, 425.99518, -1, -1, -1, 500);
	CreateDynamicObject(8558, -989.2151, -1115.08, 2103.359,   337.00000, 20.00000, 429.59518, -1, -1, -1, 500);
	CreateDynamicObject(8558, -984.385, -1116.706, 2105.359,   337.00000, 20.00000, 433.19519, -1, -1, -1, 500);
	CreateDynamicObject(8558, -979.4624, -1118.025, 2107.359,   337.00000, 20.00000, 436.79520, -1, -1, -1, 500);
	CreateDynamicObject(8558, -974.4668, -1119.033, 2109.359,   337.00000, 20.00000, 440.39520, -1, -1, -1, 500);
	CreateDynamicObject(8558, -969.4175, -1119.725, 2111.359,   337.00000, 20.00000, 443.99521, -1, -1, -1, 500);
	CreateDynamicObject(8558, -964.335, -1120.099, 2113.359,   337.00000, 20.00000, 447.59521, -1, -1, -1, 500);
	CreateDynamicObject(8558, -959.2388, -1120.153, 2115.359,   337.00000, 20.00000, 451.19522, -1, -1, -1, 500);
	CreateDynamicObject(8558, -954.1494, -1119.886, 2117.359,   337.00000, 20.00000, 454.79523, -1, -1, -1, 500);
	CreateDynamicObject(8558, -949.0867, -1119.301, 2119.359,   337.00000, 20.00000, 458.39523, -1, -1, -1, 500);
	CreateDynamicObject(8558, -944.0708, -1118.399, 2121.359,   337.00000, 20.00000, 461.99524, -1, -1, -1, 500);
	CreateDynamicObject(8558, -939.1216, -1117.184, 2123.359,   337.00000, 20.00000, 465.59525, -1, -1, -1, 500);
	CreateDynamicObject(8558, -934.2583, -1115.66, 2125.359,   337.00000, 20.00000, 469.19525, -1, -1, -1, 500);
	CreateDynamicObject(8558, -929.5002, -1113.834, 2127.359,   337.00000, 20.00000, 472.79526, -1, -1, -1, 500);
	CreateDynamicObject(8558, -924.8662, -1111.713, 2129.359,   337.00000, 20.00000, 476.39526, -1, -1, -1, 500);
	CreateDynamicObject(8558, -920.3745, -1109.305, 2131.359,   337.00000, 20.00000, 479.99527, -1, -1, -1, 500);
	CreateDynamicObject(8558, -916.043, -1106.62, 2133.359,   337.00000, 20.00000, 483.59528, -1, -1, -1, 500);
	CreateDynamicObject(8558, -911.8887, -1103.668, 2135.359,   337.00000, 20.00000, 487.19528, -1, -1, -1, 500);
	CreateDynamicObject(8558, -907.9277, -1100.461, 2137.359,   337.00000, 20.00000, 490.79529, -1, -1, -1, 500);
	CreateDynamicObject(8558, -904.176, -1097.012, 2139.359,   337.00000, 20.00000, 494.39529, -1, -1, -1, 500);
	CreateDynamicObject(8558, -900.6482, -1093.334, 2141.359,   337.00000, 20.00000, 497.99530, -1, -1, -1, 500);
	CreateDynamicObject(8558, -897.3584, -1089.441, 2143.359,   337.00000, 20.00000, 501.59531, -1, -1, -1, 500);
	CreateDynamicObject(8558, -894.3196, -1085.35, 2145.359,   337.00000, 20.00000, 505.19531, -1, -1, -1, 500);
	CreateDynamicObject(8558, -891.5435, -1081.076, 2147.359,   337.00000, 20.00000, 508.79532, -1, -1, -1, 500);
	CreateDynamicObject(8558, -889.0413, -1076.636, 2149.359,   337.00000, 20.00000, 512.39532, -1, -1, -1, 500);
	CreateDynamicObject(8558, -886.8228, -1072.048, 2151.359,   337.00000, 20.00000, 515.99530, -1, -1, -1, 500);
	CreateDynamicObject(8558, -884.897, -1067.33, 2153.359,   337.00000, 20.00000, 519.59528, -1, -1, -1, 500);
	CreateDynamicObject(8558, -883.271, -1062.5, 2155.359,   337.00000, 20.00000, 523.19525, -1, -1, -1, 500);
	CreateDynamicObject(8558, -881.9514, -1057.577, 2157.359,   337.00000, 20.00000, 526.79523, -1, -1, -1, 500);
	CreateDynamicObject(8558, -880.9438, -1052.582, 2159.359,   337.00000, 20.00000, 530.39520, -1, -1, -1, 500);
	CreateDynamicObject(8558, -880.2517, -1047.532, 2161.359,   337.00000, 20.00000, 533.99518, -1, -1, -1, 500);
	CreateDynamicObject(8558, -879.8779, -1042.45, 2163.359,   337.00000, 20.00000, 537.59515, -1, -1, -1, 500);
	CreateDynamicObject(8558, -879.8242, -1037.354, 2165.359,   337.00000, 20.00000, 541.19513, -1, -1, -1, 500);
	CreateDynamicObject(8558, -880.0906, -1032.264, 2167.359,   337.00000, 20.00000, 544.79510, -1, -1, -1, 500);
	CreateDynamicObject(8558, -880.6758, -1027.202, 2169.359,   337.00000, 20.00000, 548.39508, -1, -1, -1, 500);
	CreateDynamicObject(8558, -881.5779, -1022.186, 2171.359,   337.00000, 20.00000, 551.99506, -1, -1, -1, 500);
	CreateDynamicObject(8558, -882.793, -1017.237, 2173.359,   337.00000, 20.00000, 555.59503, -1, -1, -1, 500);
	CreateDynamicObject(8558, -884.3167, -1012.374, 2175.359,   337.00000, 20.00000, 559.19501, -1, -1, -1, 500);
	CreateDynamicObject(8558, -886.1426, -1007.615, 2177.359,   337.00000, 20.00000, 562.79498, -1, -1, -1, 500);
	CreateDynamicObject(8558, -888.2637, -1002.981, 2179.359,   337.00000, 20.00000, 566.39496, -1, -1, -1, 500);
	CreateDynamicObject(8558, -890.6716, -998.49, 2181.359,   337.00000, 20.00000, 569.99493, -1, -1, -1, 500);
	CreateDynamicObject(8558, -893.3567, -994.1582, 2183.359,   337.00000, 20.00000, 573.59491, -1, -1, -1, 500);
	CreateDynamicObject(8558, -896.3086, -990.0039, 2185.359,   337.00000, 20.00000, 577.19489, -1, -1, -1, 500);
	CreateDynamicObject(8558, -899.5154, -986.043, 2187.359,   337.00000, 20.00000, 580.79486, -1, -1, -1, 500);
	CreateDynamicObject(8558, -902.9646, -982.2913, 2189.359,   337.00000, 20.00000, 584.39484, -1, -1, -1, 500);
	CreateDynamicObject(8558, -906.6426, -978.7637, 2191.359,   337.00000, 20.00000, 587.99481, -1, -1, -1, 500);
	CreateDynamicObject(8558, -910.5349, -975.4739, 2193.359,   337.00000, 20.00000, 591.59479, -1, -1, -1, 500);
	CreateDynamicObject(8558, -914.626, -972.4348, 2195.359,   337.00000, 20.00000, 595.19476, -1, -1, -1, 500);
	CreateDynamicObject(8558, -918.8999, -969.6587, 2197.359,   337.00000, 20.00000, 598.79474, -1, -1, -1, 500);
	CreateDynamicObject(8558, -923.3396, -967.1565, 2199.359,   337.00000, 20.00000, 602.39471, -1, -1, -1, 500);
	CreateDynamicObject(8558, -927.9277, -964.938, 2201.359,   337.00000, 20.00000, 605.99469, -1, -1, -1, 500);
	CreateDynamicObject(8558, -981.9144, -961.9147, 2027.189,   55.01953, 33.29956, 253.20190, -1, -1, -1, 500);
	CreateDynamicObject(8558, -979.0449, -962.729, 2031.212,   55.01953, 33.29956, 253.20190, -1, -1, -1, 500);
	CreateDynamicObject(8558, -976.189, -963.5901, 2035.313,   55.01953, 33.29956, 253.20190, -1, -1, -1, 500);
	CreateDynamicObject(8558, -931.74274, -963.07074, 2202.599,   0.00000, -20.00000, 58.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -935.84845, -960.15906, 2202.599,   0.00000, -18.00000, 58.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -939.90643, -957.28070, 2202.599,   0.00000, -16.00000, 58.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -943.95740, -954.38354, 2202.599,   0.00000, -14.00000, 58.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -947.92902, -951.29993, 2202.599,   0.00000, -12.00000, 58.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -951.81616, -948.05634, 2202.599,   0.00000, -10.00000, 58.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -955.77325, -944.98718, 2202.599,   0.00000, -8.00000, 58.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -959.72083, -941.84753, 2202.599,   0.00000, -6.00000, 58.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -963.47009, -938.50848, 2202.599,   0.00000, -4.00000, 58.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -967.30762, -935.23926, 2202.599,   0.00000, -2.00000, 58.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -971.17603, -932.02820, 2202.599,   0.00000, 0.00000, 58.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -975.51947, -929.31958, 2202.599,   0.00000, 0.00000, 58.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -979.85999, -926.61310, 2202.599,   0.00000, 0.00000, 58.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -984.20313, -923.90417, 2202.599,   0.00000, 0.00000, 58.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -988.54712, -921.19128, 2202.599,   0.00000, 0.00000, 58.00000, -1, -1, -1, 500);
	CreateDynamicObject(8558, -992.89117, -918.47913, 2202.599,   0.00000, 0.00000, 58.00000, -1, -1, -1, 500);

	PickupIDin[0] = CreateDynamicPickup(19198, 14, -979.20, -1084.89, 1991.0, 9990, 0, -1, 100.0);//создаём внутренний пикап-телепорт 1
	PickupIDin[1] = CreateDynamicPickup(19198, 14, -979.37, -1072.86, 1991.0, 9990, 0, -1, 100.0);//создаём внутренний пикап-телепорт 2
	posmoveobj = 1;//задаём 1-ю позицию вращающегося объекта
	MovObj();//вызов функции вращения объекта

	Live = TextDrawCreate(510.000000,251.000000,"LIVE:");//текст-дравы жизней игроков
	TextDrawAlignment(Live,0);
	TextDrawBackgroundColor(Live,0x000000ff);
	TextDrawFont(Live,1);
	TextDrawLetterSize(Live,0.599999,2.599999);
	TextDrawColor(Live,0xff3333ff);
	TextDrawSetOutline(Live,1);
	TextDrawSetProportional(Live,1);
	TextDrawSetShadow(Live,1);

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		conconTD[i] = 0;//снятие блокировки создания текст-дравов при подключении игрока

		if(IsPlayerConnected(i))//если игрок в коннекте, то:
		{
			CountLive[i] = CreatePlayerTextDraw(i,565.000000,250.000000,"_");
			PlayerTextDrawAlignment(i,CountLive[i],0);
			PlayerTextDrawBackgroundColor(i,CountLive[i],0x0000ff66);
			PlayerTextDrawFont(i,CountLive[i],2);
			PlayerTextDrawLetterSize(i,CountLive[i],0.699999,2.699999);
			PlayerTextDrawColor(i,CountLive[i],0xffffffff);
			PlayerTextDrawSetOutline(i,CountLive[i],1);
			PlayerTextDrawSetProportional(i,CountLive[i],1);
			PlayerTextDrawSetShadow(i,CountLive[i],1);

			conconTD[i] = 1;//блокировка создания текст-дравов при подключении игрока
		}

#if (FS11INS == 2)
		SetPVarInt(i, "PlConRepDS", 0);//включаем авторемонт
#endif
#if (FS11INS == 1)
		dlgcont[i] = -600;//не существующий ИД диалога
#endif
		dsstate[i] = 0;//очистка дерби-сумо статуса игрока
		dscarid[i] = -600;//очистка ИД транспорта участника дерби-сумо
		dsbonus[i] = -600;//очистка ИД бонуса игрока
	}
	dsgen1 = 0;//очистка общего числа дрифтеров
	dsgen2 = 0;//очистка общего числа полицейских
	dsgen3 = 0;//очистка общего числа колхозников
	dsPickupID[0] = -600;//очистка ИД пикапов-бонусов
	dsPickupID[1] = -600;
	dsPickupID[2] = -600;
	dsPickupID44[0] = -600;//очистка условных позиций спавнов пикапов-бонусов
	dsPickupID44[1] = -600;
	dsPickupID44[2] = -600;
	dsPickupcount = 0;//очистка числа рабочих пикапов-бонусов
	dsPickupcount44 = 0;//переменная задержки
	onesectimer = SetTimer("OneSec", 1003, 1);
	return 1;
}

public OnFilterScriptExit()
{
	new para1 = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{

	    PlayerTextDrawHide(i, CountLive[i]);//текст-дравы жизней игроков
	    TextDrawHideForPlayer(i, Live);

		if(IsPlayerConnected(i))
		{

			PlayerTextDrawDestroy(i, CountLive[i]);//текст-дравы жизней игроков

			if(dsstate[i] != 0)
			{
				para1 = 1;
#if (FS11INS == 1)
	 			SetPlayerInterior(i, 0);
				SetPlayerVirtualWorld(i, 0);
				SetPlayerPos(i, corpl[i][0], corpl[i][1], corpl[i][2]);
				SetCameraBehindPlayer(i);
#endif
#if (FS11INS == 2)
				if(GetPVarInt(i, "SecPris") == 0)//если игрок НЕ сидит в тюрьме, то:
				{
					SetPVarInt(i, "PlCRTp", 1);
	 				SetPlayerInterior(i, 0);
					SetPlayerVirtualWorld(i, 0);
					SetPlayerPos(i, corpl[i][0], corpl[i][1], corpl[i][2]);
					SetCameraBehindPlayer(i);
				}
#endif
				if(dscarid[i] != -600)//если есть транспорт у участника дерби-сумо, то:
				{
					DestroyVehicle(dscarid[i]);//удаляем транспорт
				}
				SetPlayerColor(i, mapcolpl[i]);
   				for(new j = 0; j < MAX_PLAYERS; j++)//возвращаем игроку цвета маркера
				{
					SetPlayerMarkerForPlayer(j, i, mapcolpl[i]);
				}
			}
#if (FS11INS == 2)
			DeletePVar(i, "PlConRepDS");//удаляем глобальную переменную авторемонта
#endif
			dsstate[i] = 0;//очистка дерби-сумо статуса игрока
			dscarid[i] = -600;//очистка ИД транспорта участника дерби-сумо
			dsbonus[i] = -600;//очистка ИД бонуса игрока
			dslive[i] = 0;//устанавливаем 0 жизней
		}
		conconTD[i] = 0;//снятие блокировки создания текст-дравов при подключении игрока
	}

	TextDrawDestroy(Live);//текст-дравы жизней игроков

	if(para1 == 1)
	{
		SendClientMessageToAll(COLOR_RED, " Дерби-сумо было завершено ! (выгрузка системы дерби-сумо) !");
		print("[Derby] Дерби-сумо было завершено ! (выгрузка скрипта) !");
	}
	DestroyDynamicObject(moveobj);//удаление вращающегося объекта
	if(PickupIDin[0] != -600) { DestroyDynamicPickup(PickupIDin[0]); }//удаление внутренних пикапов-телепортов
	if(PickupIDin[1] != -600) { DestroyDynamicPickup(PickupIDin[1]); }
	PickupIDin[0] = -600;//очистка ИД внутренних пикапов-телепортов
	PickupIDin[1] = -600;
	dsgen1 = 0;//очистка общего числа дрифтеров
	dsgen2 = 0;//очистка общего числа полицейских
	dsgen3 = 0;//очистка общего числа колхозников
	if(dsPickupID[0] != -600) { DestroyDynamicPickup(dsPickupID[0]); }//удаление пикапов-бонусов
	if(dsPickupID[1] != -600) { DestroyDynamicPickup(dsPickupID[1]); }
	if(dsPickupID[2] != -600) { DestroyDynamicPickup(dsPickupID[2]); }
	dsPickupID[0] = -600;//очистка ИД пикапов-бонусов
	dsPickupID[1] = -600;
	dsPickupID[2] = -600;
	dsPickupID44[0] = -600;//очистка условных позиций спавнов пикапов-бонусов
	dsPickupID44[1] = -600;
	dsPickupID44[2] = -600;
	dsPickupcount = 0;//очистка числа рабочих пикапов-бонусов
	dsPickupcount44 = 0;//переменная задержки
	KillTimer(onesectimer);
	return 1;
}

public OnPlayerConnect(playerid)
{
	if(conconTD[playerid] == 0)
	{//если создание текст-дравов НЕ заблокировано, то:

		CountLive[playerid] = CreatePlayerTextDraw(playerid,565.000000,250.000000,"_");//текст-драв жизней игрока
		PlayerTextDrawAlignment(playerid,CountLive[playerid],0);
		PlayerTextDrawBackgroundColor(playerid,CountLive[playerid],0x0000ff66);
		PlayerTextDrawFont(playerid,CountLive[playerid],2);
		PlayerTextDrawLetterSize(playerid,CountLive[playerid],0.699999,2.699999);
		PlayerTextDrawColor(playerid,CountLive[playerid],0xffffffff);
		PlayerTextDrawSetOutline(playerid,CountLive[playerid],1);
		PlayerTextDrawSetProportional(playerid,CountLive[playerid],1);
		PlayerTextDrawSetShadow(playerid,CountLive[playerid],1);

	}
	conconTD[playerid] = 1;//блокировка создания текст-дравов при подключении игрока
#if (FS11INS == 2)
	SetPVarInt(playerid, "PlConRepDS", 0);//включаем авторемонт
#endif
#if (FS11INS == 1)
	dlgcont[playerid] = -600;//не существующий ИД диалога
#endif
	dsstate[playerid] = 0;//очистка дерби-сумо статуса игрока
	dscarid[playerid] = -600;//очистка ИД транспорта участника дерби-сумо
	dsbonus[playerid] = -600;//очистка ИД бонуса игрока
	dslock[playerid] = 0;//отключение блокировки контроля игрока
	dslive[playerid] = 0;//устанавливаем 0 жизней
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
#if (FS11INS == 2)
	DeletePVar(playerid, "PlConRepDS");//удаляем глобальную переменную авторемонта
#endif
#if (FS11INS == 1)
	dlgcont[playerid] = -600;//не существующий ИД диалога
#endif
	dsstate[playerid] = 0;//очистка дерби-сумо статуса игрока
	dscarid[playerid] = -600;//очистка ИД транспорта участника дерби-сумо
	dsbonus[playerid] = -600;//очистка ИД бонуса игрока
	dslock[playerid] = 0;//отключение блокировки контроля игрока

	PlayerTextDrawHide(playerid, CountLive[playerid]);//текст-дравы жизней игроков
	TextDrawHideForPlayer(playerid, Live);
	PlayerTextDrawDestroy(playerid, CountLive[playerid]);

	conconTD[playerid] = 0;//снятие блокировки создания текст-дравов при подключении игрока
	dslive[playerid] = 0;//устанавливаем 0 жизней
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	if(GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 9990 && dsstate[playerid] != 0)
	{//если игрок находится на дерби-сумо, то:
		dslock[playerid] = 1;//блокировка контроля игрока
		if(dsstate[playerid] == 1) { dsgen1--; }
		if(dsstate[playerid] == 2) { dsgen2--; }
		if(dsstate[playerid] == 3) { dsgen3--; }
		dsstate[playerid] = 0;//очистка дерби-сумо статуса игрока
		dsbonus[playerid] = -600;//очистка ИД бонуса игрока
		SetPVarInt(playerid, "PlConRepDS", 0);//включаем авторемонт

		PlayerTextDrawHide(playerid, CountLive[playerid]);//текст-дравы жизней игроков
		TextDrawHideForPlayer(playerid, Live);

		dslive[playerid] = 0;//устанавливаем 0 жизней
		if(dscarid[playerid] != -600)//если есть транспорт у участника дерби-сумо, то:
		{
			DestroyVehicle(dscarid[playerid]);//удаляем транспорт
			dscarid[playerid] = -600;//очистка ИД транспорта участника дерби-сумо
		}
		SetPlayerColor(playerid, mapcolpl[playerid]);
	   	for(new i = 0; i < MAX_PLAYERS; i++)//возвращаем игроку цвета маркера
		{
			SetPlayerMarkerForPlayer(i, playerid, mapcolpl[playerid]);
		}
		SetTimerEx("dsunlock", 1000, 0, "i", playerid);//отключение блокировки контроля игрока
		new string[256];
		new sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), " Игрок %s [%d] вышел из дерби-сумо.", sendername, playerid);
		SendDSMessage(COLOR_RED, string);
		SendClientMessage(playerid, COLOR_RED, " Вы вышли из дерби-сумо.");
		new aa333[64];//доработка для использования Русских ников
		format(aa333, sizeof(aa333), "%s", sendername);//доработка для использования Русских ников
		printf("[Derby] Игрок %s [%d] вышел из дерби-сумо.", aa333, playerid);//доработка для использования Русских ников
//		printf("[Derby] Игрок %s [%d] вышел из дерби-сумо.", sendername, playerid);
	}
	return 1;
}

public SendDSMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(dsstate[i] > 0)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
	return 1;
}

strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[30];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

public OnPlayerCommandText(playerid, cmdtext[])
{
#if (FS11INS == 2)
	if(GetPVarInt(playerid, "CComAc13") < 0)
	{
		new dopcis, sstr[256];
		dopcis = FCislit(GetPVarInt(playerid, "CComAc13"));
		switch(dopcis)
		{
			case 0: format(sstr, sizeof(sstr), " Спам в чате (или в командах) !   Попробуйте через %d секунд !", GetPVarInt(playerid, "CComAc13") * -1);
			case 1: format(sstr, sizeof(sstr), " Спам в чате (или в командах) !   Попробуйте через %d секунду !", GetPVarInt(playerid, "CComAc13") * -1);
			case 2: format(sstr, sizeof(sstr), " Спам в чате (или в командах) !   Попробуйте через %d секунды !", GetPVarInt(playerid, "CComAc13") * -1);
		}
		SendClientMessage(playerid, COLOR_RED, sstr);
		return 1;
	}
	SetPVarInt(playerid, "CComAc13", GetPVarInt(playerid, "CComAc13") + 1);
#endif
	new idx;
	idx = 0;
	new string[256];
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new cmd[256];
	new tmp[256];
	cmd = strtok(cmdtext, idx);
	if(strcmp(cmd, "/dshelp", true) == 0)
	{
		SendClientMessage(playerid, COLOR_BIR, " ---------------------------- Команды системы дерби-сумо ----------------------------");
		SendClientMessage(playerid, COLOR_BIR, "         Для участников:");
		SendClientMessage(playerid, COLOR_BIR, " /dshelp - помощь по командам системы дерби-сумо");
		SendClientMessage(playerid, COLOR_BIR, " /dstp - подключиться к дерби-сумо   /dsexit - выйти из дерби-сумо");
#if (FS11INS == 1)
		if(IsPlayerAdmin(playerid))
#endif
#if (FS11INS == 2)
		if(GetPVarInt(playerid, "AdmLvl") >= 1 || IsPlayerAdmin(playerid))
#endif
		{
			SendClientMessage(playerid, COLOR_BIR, "         Для админов:");
			SendClientMessage(playerid, COLOR_BIR, " /dstpa - телепортироваться на дерби-сумо");
			SendClientMessage(playerid, COLOR_BIR, " /dsset - установить всем участникам дерби-сумо по 10 жизней");
			SendClientMessage(playerid, COLOR_BIR, " /dsadd - прибавить всем участникам дерби-сумо по 5 жизней");
			SendClientMessage(playerid, COLOR_BIR, " /dsrep - починить транспорт всем участникам дерби-сумо");
			SendClientMessage(playerid, COLOR_BIR, " /dskick [ИД игрока] - удалить игрока из дерби-сумо");
		}
		SendClientMessage(playerid, COLOR_BIR, " -------------------------------------------------------------------------------------------------------");
		return 1;
	}
	if(strcmp(cmd, "/dstp", true) == 0)
	{
#if (FS11INS == 2)
		if(GetPVarInt(playerid, "PlDeport") == 1)
		{
			SendClientMessage(playerid, COLOR_RED, " Вы не можете подключиться к дерби-сумо,");
			SendClientMessage(playerid, COLOR_RED, " пока дело о Вашей депортации на слушании !");
			return 1;
		}
		if(GetPVarInt(playerid, "SecPris") > 0)
		{
			SendClientMessage(playerid, COLOR_RED, " В тюрьме команда не работает !");
			return 1;
		}
		if(GetPVarInt(playerid, "PlFrost") == 1)
		{
			SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заморожены !");
			return 1;
		}
#endif
		if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0 || dsstate[playerid] != 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Команда работает только на основной карте ! И только, если Вы НЕ участник дерби-сумо !");
			return 1;
		}
		ShowPlayerDialog(playerid, 800, 2, "Выбор команды.", "Дрифтеры\nПолиция\nКолхозники", "Выбор", "Отмена");
#if (FS11INS == 1)
		dlgcont[playerid] = 800;
#endif
#if (FS11INS == 2)
		SetPVarInt(playerid, "DlgCont", 800);
#endif
		return 1;
	}
	if(strcmp(cmd, "/dsexit", true) == 0)
	{
#if (FS11INS == 2)
		if(GetPVarInt(playerid, "PlFrost") == 1)
		{
			SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заморожены !");
			return 1;
		}
#endif
		if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 9990 || dsstate[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Команда работает только на дерби-сумо ! И только у участников дерби-сумо !");
			return 1;
		}
		playexit(playerid);//выход игрока (отключение от дерби-сумо)
		return 1;
	}
	if(strcmp(cmd, "/dstpa", true) == 0)
	{
#if (FS11INS == 1)
		if(IsPlayerAdmin(playerid))
		{
#endif
#if (FS11INS == 2)
		if(GetPVarInt(playerid, "AdmLvl") >= 1 || IsPlayerAdmin(playerid))
		{
			if(GetPVarInt(playerid, "SecPris") > 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В тюрьме команда не работает !");
				return 1;
			}
#endif
			if(dsstate[playerid] != 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Команда работает, только если Вы НЕ участник дерби-сумо !");
				return 1;
			}
#if (FS11INS == 2)
			SetPVarInt(playerid, "PlCRTp", 1);
#endif
			SetPlayerVirtualWorld(playerid, 9990);//устанавливаем админу 9990-й виртуальный мир
			SetPlayerInterior(playerid, 0);//устанавливаем админу 0-й интерьер
			SetPlayerPos(playerid, -1010.50, -999.08, 2013.88);
			SetCameraBehindPlayer(playerid);
			SendClientMessage(playerid, COLOR_GREEN, " Вы телепортировались на дерби-сумо.");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new aa333[64];//доработка для использования Русских ников
			format(aa333, sizeof(aa333), "%s", sendername);//доработка для использования Русских ников
			printf("[Derby] Админ %s [%d] телепортировался на дерби-сумо.", aa333, playerid);//доработка для использования Русских ников
//			printf("[Derby] Админ %s [%d] телепортировался на дерби-сумо.", sendername, playerid);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/dsset", true) == 0)
	{
#if (FS11INS == 1)
		if(IsPlayerAdmin(playerid))
		{
#endif
#if (FS11INS == 2)
		if(GetPVarInt(playerid, "AdmLvl") >= 1 || IsPlayerAdmin(playerid))
		{
			if(GetPVarInt(playerid, "SecPris") > 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В тюрьме команда не работает !");
				return 1;
			}
#endif
			new para1 = 0;
			for(new i = 0; i < MAX_PLAYERS ; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(dsstate[i] != 0)
					{
						para1 = 1;
						dslive[i] = 10;
					}
				}
			}
			if(para1 == 1)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), " Админ %s [%d] установил всем участникам дерби-сумо по 10 жизней.", sendername, playerid);
				SendDSMessage(COLOR_GREEN, string);
				if(dsstate[playerid] == 0)
				{
					SendClientMessage(playerid, COLOR_GREEN, " Вы установили всем участникам дерби-сумо по 10 жизней.");
				}
				new aa333[64];//доработка для использования Русских ников
				format(aa333, sizeof(aa333), "%s", sendername);//доработка для использования Русских ников
				printf("[Derby] Админ %s [%d] установил всем участникам дерби-сумо по 10 жизней.", aa333, playerid);//доработка для использования Русских ников
//				printf("[Derby] Админ %s [%d] установил всем участникам дерби-сумо по 10 жизней.", sendername, playerid, mpstate[playerid], mpvw[playerid]);
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " В данный момент на дерби-сумо нет игроков !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/dsadd", true) == 0)
	{
#if (FS11INS == 1)
		if(IsPlayerAdmin(playerid))
		{
#endif
#if (FS11INS == 2)
		if(GetPVarInt(playerid, "AdmLvl") >= 1 || IsPlayerAdmin(playerid))
		{
			if(GetPVarInt(playerid, "SecPris") > 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В тюрьме команда не работает !");
				return 1;
			}
#endif
			new para1 = 0;
			for(new i = 0; i < MAX_PLAYERS ; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(dsstate[i] != 0)
					{
						if(dslive[i] <= 20)
						{
							dslive[i] = dslive[i] + 5;
							para1 = 1;
						}
					}
				}
			}
			if(para1 == 1)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), " Админ %s [%d] прибавил всем участникам дерби-сумо по 5 жизней.", sendername, playerid);
				SendDSMessage(COLOR_GREEN, string);
				if(dsstate[playerid] == 0)
				{
					SendClientMessage(playerid, COLOR_GREEN, " Вы прибавили всем участникам дерби-сумо по 5 жизней.");
				}
				new aa333[64];//доработка для использования Русских ников
				format(aa333, sizeof(aa333), "%s", sendername);//доработка для использования Русских ников
				printf("[Derby] Админ %s [%d] прибавил всем участникам дерби-сумо по 5 жизней.", aa333, playerid);//доработка для использования Русских ников
//				printf("[Derby] Админ %s [%d] прибавил всем участникам дерби-сумо по 5 жизней.", sendername, playerid, mpstate[playerid], mpvw[playerid]);
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " В данный момент на дерби-сумо нет игроков !");
				SendClientMessage(playerid, COLOR_RED, " Или у всех игроков больше 20-и жизней !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/dsrep", true) == 0)
	{
#if (FS11INS == 1)
		if(IsPlayerAdmin(playerid))
		{
#endif
#if (FS11INS == 2)
		if(GetPVarInt(playerid, "AdmLvl") >= 1 || IsPlayerAdmin(playerid))
		{
			if(GetPVarInt(playerid, "SecPris") > 0)
			{
				SendClientMessage(playerid, COLOR_RED, " В тюрьме команда не работает !");
				return 1;
			}
#endif
			new para1 = 0;
			for(new i = 0; i < MAX_PLAYERS ; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(dsstate[i] != 0)
					{
						para1 = 1;
						new car = GetPlayerVehicleID(i);
						RepairVehicle(car);
						SetVehicleHealth(car, 1000);
					}
				}
			}
			if(para1 == 1)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), " Админ %s [%d] починил транспорт всем участникам дерби-сумо.", sendername, playerid);
				SendDSMessage(COLOR_GREEN, string);
				if(dsstate[playerid] == 0)
				{
					SendClientMessage(playerid, COLOR_GREEN, " Вы починили транспорт всем участникам дерби-сумо.");
				}
				new aa333[64];//доработка для использования Русских ников
				format(aa333, sizeof(aa333), "%s", sendername);//доработка для использования Русских ников
				printf("[Derby] Админ %s [%d] починил транспорт всем участникам дерби-сумо.", aa333, playerid);//доработка для использования Русских ников
//				printf("[Derby] Админ %s [%d] починил транспорт всем участникам дерби-сумо.", sendername, playerid, mpstate[playerid], mpvw[playerid]);
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, " В данный момент на дерби-сумо нет игроков !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	if(strcmp(cmd, "/dskick", true) == 0)
	{
#if (FS11INS == 1)
		if(IsPlayerAdmin(playerid))
#endif
#if (FS11INS == 2)
		if(GetPVarInt(playerid, "AdmLvl") >= 1 || IsPlayerAdmin(playerid))
#endif
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /dskick [ИД игрока]");
				return 1;
			}
			new para1;
			para1 = strval(tmp);
			if(para1 == playerid)
			{
				SendClientMessage(playerid, COLOR_RED, " Вы не можете удалить из дерби-сумо самого себя !");
				return 1;
			}
			if(!IsPlayerConnected(para1))
			{
				SendClientMessage(playerid, COLOR_RED, " Такого [ИД игрока] на сервере нет !");
				return 1;
			}
			if(dsstate[para1] == 0)
			{
				SendClientMessage(playerid, COLOR_RED, " Такой [ИД игрока] не участвует в дерби-сумо !");
				return 1;
			}
			if(dsstate[para1] == 1) { dsgen1--; }
			if(dsstate[para1] == 2) { dsgen2--; }
			if(dsstate[para1] == 3) { dsgen3--; }
			dsstate[para1] = 0;//очистка дерби-сумо статуса игрока
			dsbonus[para1] = -600;//очистка ИД бонуса игрока
			SetPVarInt(para1, "PlConRepDS", 0);//включаем авторемонт

			PlayerTextDrawHide(para1, CountLive[para1]);//текст-дравы жизней игроков
			TextDrawHideForPlayer(para1, Live);

			dslive[para1] = 0;//устанавливаем 0 жизней
			if(dscarid[para1] != -600)//если есть транспорт у участника дерби-сумо, то:
			{
				DestroyVehicle(dscarid[para1]);//удаляем транспорт
				dscarid[para1] = -600;//очистка ИД транспорта участника дерби-сумо
			}
			SetPlayerColor(para1, mapcolpl[para1]);
	   		for(new i = 0; i < MAX_PLAYERS; i++)//возвращаем игроку цвета маркера
			{
				SetPlayerMarkerForPlayer(i, para1, mapcolpl[para1]);
			}
#if (FS11INS == 1)
		 	SetPlayerInterior(para1, 0);
			SetPlayerVirtualWorld(para1, 0);
			SetPlayerPos(para1, corpl[para1][0], corpl[para1][1], corpl[para1][2]+3.0);
			SetCameraBehindPlayer(para1);
#endif
#if (FS11INS == 2)
			if(GetPVarInt(para1, "SecPris") == 0)//если игрок НЕ сидит в тюрьме, то:
			{
				SetPVarInt(para1, "PlCRTp", 1);
		 		SetPlayerInterior(para1, 0);
				SetPlayerVirtualWorld(para1, 0);
				SetPlayerPos(para1, corpl[para1][0], corpl[para1][1], corpl[para1][2]+3.0);
				SetCameraBehindPlayer(para1);
			}
#endif
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerName(para1, giveplayer, sizeof(sendername));
			format(string, sizeof(string), " Админ %s [%d] удалил игрока %s [%d] из дерби-сумо !", sendername, playerid, giveplayer, para1);
			SendDSMessage(COLOR_RED, string);
			if(dsstate[playerid] == 0)
			{
				format(string, sizeof(string), " Вы удалили игрока %s [%d] из дерби-сумо !", giveplayer, para1);
				SendClientMessage(playerid, COLOR_RED, string);
			}
			format(string, sizeof(string), " Админ %s [%d] удалил Вас из дерби-сумо !", sendername, playerid);
			SendClientMessage(para1, COLOR_RED, string);
			new aa333[64];//доработка для использования Русских ников
			format(aa333, sizeof(aa333), "%s", sendername);//доработка для использования Русских ников
			new aa444[64];//доработка для использования Русских ников
			format(aa444, sizeof(aa444), "%s", giveplayer);//доработка для использования Русских ников
			printf("[Derby] Админ %s [%d] удалил игрока %s [%d] из дерби-сумо.", aa333, playerid, aa444, para1);//доработка для использования Русских ников
//			printf("[Derby] Админ %s [%d] удалил игрока %s [%d] из дерби-сумо.", sendername, playerid, giveplayer, para1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, " У Вас нет прав на использование этой команды !");
		}
		return 1;
	}
	return 0;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 9990 && dsstate[playerid] != 0)
	{
		if(IsPlayerInAnyVehicle(playerid) && (newkeys & KEY_NO))
		{
			if(dsbonus[playerid] == 1)//бонус 1 (взрыв в радиусе 20)
			{
				new Float:X, Float:Y, Float:Z, Float:rad, Float:exX, Float:exY;
				GetPlayerPos(playerid, X, Y, Z);
				rad = 0.00;
				for(new i = 0; i < 16; i++)//задаём 16 взрывов по окружности
				{
					exX = floatcos(rad);
					exX = floatmul(exX, 20.0);
					exY = floatsin(rad);
					exY = floatmul(exY, 20.0);
					CreateExplosion(X+exX, Y+exY, Z, 10, 1.0);
					rad = rad + 0.3925;
				}
				dsbonus[playerid] = -600;//очищаем ИД бонуса игрока
				SendClientMessage(playerid, COLOR_YELLOW, " Вы использовали бонус: взрыв в радиусе 20 к.е.");
			}
			if(dsbonus[playerid] == 2)//бонус 2 (выкинуть игроков из транспорта в радиусе 20)
			{
				new Float:X, Float:Y, Float:Z, playint, playvw, Float:plX, Float:plY, Float:plZ;
				GetPlayerPos(playerid, X, Y, Z);
				playint = GetPlayerInterior(playerid);
				playvw = GetPlayerVirtualWorld(playerid);
				for(new i = 0; i < MAX_PLAYERS; i++)//цикл для всех игроков
				{
					if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
					{
						if(IsPlayerInRangeOfPoint(i, 20.0, X, Y, Z) && GetPlayerInterior(i) == playint &&
						GetPlayerVirtualWorld(i) == playvw && i != playerid)
						{
							GetPlayerPos(i, plX, plY, plZ);
							SetPlayerPos(i, plX+3, plY+3, plZ+5);
						}
					}
				}
				dsbonus[playerid] = -600;//очищаем ИД бонуса игрока
				SendClientMessage(playerid, COLOR_YELLOW, " Вы использовали бонус: выкинуть игроков из транспорта в радиусе 20 к.е.");
			}
		}
	}
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
#if (FS11INS == 2)
	if(GetPVarInt(playerid, "DlgCont") == -600)//если НЕ существующий ИД диалога, то:
	{
		return 1;//завершаем функцию
	}
#endif
	if(dialogid == 800)
    {
#if (FS11INS == 1)
		if(dialogid != dlgcont[playerid])
		{
			dlgcont[playerid] = -600;//не существующий ИД диалога
			return 1;
		}
		dlgcont[playerid] = -600;//не существующий ИД диалога
#endif
#if (FS11INS == 2)
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
#endif
		if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0 || dsstate[playerid] != 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Меню работает только на основной карте ! И только, если Вы НЕ участник дерби-сумо !");
			return 1;
		}
#if (FS11INS == 2)
		if(GetPVarInt(playerid, "PlFrost") == 1)
		{
			SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заморожены !");
			return 1;
		}
#endif
        if(response)
		{
			dsidpara1[playerid] = listitem + 1;
			if(dsidpara1[playerid] == 1)
			{
				ShowPlayerDialog(playerid, 801, 2, "Выбор транспорта.", "Elegy\nFlash\nJester", "Выбор", "Отмена");
			}
			if(dsidpara1[playerid] == 2)
			{
				ShowPlayerDialog(playerid, 801, 2, "Выбор транспорта.", "Police Los Santos\nPolice San Fierro\nPolice Las Venturas", "Выбор", "Отмена");
			}
			if(dsidpara1[playerid] == 3)
			{
				ShowPlayerDialog(playerid, 801, 2, "Выбор транспорта.", "Perrenial\nHotknife\nWalton", "Выбор", "Отмена");
			}
#if (FS11INS == 1)
			dlgcont[playerid] = 801;
#endif
#if (FS11INS == 2)
			SetPVarInt(playerid, "DlgCont", 801);
#endif
		}
		return 1;
	}
	if(dialogid == 801)//транспорт для дрифтеров, полиции, или колхозников
    {
#if (FS11INS == 1)
		if(dialogid != dlgcont[playerid])
		{
			dlgcont[playerid] = -600;//не существующий ИД диалога
			return 1;
		}
		dlgcont[playerid] = -600;//не существующий ИД диалога
#endif
#if (FS11INS == 2)
		if(dialogid != GetPVarInt(playerid, "DlgCont"))
		{
			SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
			return 1;
		}
		SetPVarInt(playerid, "DlgCont", -600);//не существующий ИД диалога
#endif
		if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0 || dsstate[playerid] != 0)
		{
			SendClientMessage(playerid, COLOR_RED, " Меню работает только на основной карте ! И только, если Вы НЕ участник дерби-сумо !");
			return 1;
		}
#if (FS11INS == 2)
		if(GetPVarInt(playerid, "PlFrost") == 1)
		{
			SendClientMessage(playerid, COLOR_RED, " Нельзя, Вы заморожены !");
			return 1;
		}
#endif
        if(response)
		{
			dslock[playerid] = 1;//блокировка контроля игрока
			new para1, para2, pararnd;
			para1 = listitem + 1;
			pararnd = random(9);
			mapcolpl[playerid] = GetPlayerColor(playerid);//сохранение цвета маркера игрока
			GetPlayerPos(playerid, corpl[playerid][0], corpl[playerid][1], corpl[playerid][2]);//сохранение координат возврата на основную карту
			if(dsidpara1[playerid] == 1) { para2 = 0xFF0000FF; }//красный цвет (дрифтеры)
			if(dsidpara1[playerid] == 2) { para2 = 0x0000FFFF; }//синий цвет (полиция)
			if(dsidpara1[playerid] == 3) { para2 = 0x00FF00FF; }//зелёный цвет (колхозники)
			SetPlayerColor(playerid, para2);
			for(new j = 0; j < MAX_PLAYERS; j++)
			{
				SetPlayerMarkerForPlayer(j, playerid, para2);//меняем цвет маркера игроку
			}
#if (FS11INS == 2)
			SetPVarInt(playerid, "PlCRTp", 1);
#endif
			SetPlayerVirtualWorld(playerid, 9990);//устанавливаем игроку 9990-й виртуальный мир
			SetPlayerInterior(playerid, 0);//устанавливаем игроку 0-й интерьер
			SetPlayerPos(playerid, dsplayspax[pararnd], dsplayspay[pararnd], dsplayspaz[pararnd]);//случайное ТП игрока на дерби-сумо
			SetCameraBehindPlayer(playerid);//расположить камеру за игроком
			TogglePlayerControllable(playerid, 0);//заморозить игрока
			SetTimerEx("dsCarSpawn", 300, 0, "ii", playerid, para1);
		}
		else
		{
			ShowPlayerDialog(playerid, 800, 2, "Выбор команды.", "Дрифтеры\nПолиция\nКолхозники", "Выбор", "Отмена");
#if (FS11INS == 1)
			dlgcont[playerid] = 800;
#endif
#if (FS11INS == 2)
			SetPVarInt(playerid, "DlgCont", 800);
#endif
		}
		return 1;
	}
	return 0;
}

forward dsCarSpawn(playerid, para1);
public dsCarSpawn(playerid, para1)//спавн транспорта
{
	new Float:plx, Float:ply, Float:plz;
	if(dsidpara1[playerid] == 1 && para1 == 1) { dscarmodel[playerid] = 562; }
	if(dsidpara1[playerid] == 1 && para1 == 2) { dscarmodel[playerid] = 565; }
	if(dsidpara1[playerid] == 1 && para1 == 3) { dscarmodel[playerid] = 559; }
	if(dsidpara1[playerid] == 2 && para1 == 1) { dscarmodel[playerid] = 596; }
	if(dsidpara1[playerid] == 2 && para1 == 2) { dscarmodel[playerid] = 597; }
	if(dsidpara1[playerid] == 2 && para1 == 3) { dscarmodel[playerid] = 598; }
	if(dsidpara1[playerid] == 3 && para1 == 1) { dscarmodel[playerid] = 404; }
	if(dsidpara1[playerid] == 3 && para1 == 2) { dscarmodel[playerid] = 434; }
	if(dsidpara1[playerid] == 3 && para1 == 3) { dscarmodel[playerid] = 478; }
	GetPlayerPos(playerid, plx, ply, plz);
	dscarid[playerid] = CreateVehicle(dscarmodel[playerid], plx, ply, plz+1, 0.0, -1, -1, 90000);//даём транспорт игроку
	LinkVehicleToInterior(dscarid[playerid], GetPlayerInterior(playerid));//подключаем транспорт к интерьеру игрока
	SetVehicleVirtualWorld(dscarid[playerid], GetPlayerVirtualWorld(playerid));//устанавливаем транспорту виртуальный мир игрока
	PutPlayerInVehicle(playerid, dscarid[playerid], 0);
	dslive[playerid] = 10;//устанавливаем 10 жизней

	new String[64];//текст-дравы жизней игроков
	TextDrawShowForPlayer(playerid, Live);

	format(String, sizeof(String), "%d", dslive[playerid]);
	PlayerTextDrawSetString(playerid, CountLive[playerid], String);
	PlayerTextDrawShow(playerid, CountLive[playerid]);

	dsstate[playerid] = dsidpara1[playerid];//установка дерби-сумо статуса игрока
	if(dsstate[playerid] == 1) { dsgen1++; }
	if(dsstate[playerid] == 2) { dsgen2++; }
	if(dsstate[playerid] == 3) { dsgen3++; }
	SetPVarInt(playerid, "PlConRepDS", 1);//отключаем авторемонт
	new string[256];
	new sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	format(string, sizeof(string), " Игрок %s [%d] подключился к дерби-сумо.", sendername, playerid);
	SendDSMessage(COLOR_GREEN, string);
	new aa333[64];//доработка для использования Русских ников
	format(aa333, sizeof(aa333), "%s", sendername);//доработка для использования Русских ников
	printf("[Derby] Игрок %s [%d] подключился к дерби-сумо.", aa333, playerid);//доработка для использования Русских ников
//	printf("[Derby] Игрок %s [%d] подключился к дерби-сумо.", sendername, playerid);
	SetTimerEx("dsunlock", 4000, 0, "i", playerid);//отключение блокировки контроля игрока
	SetTimerEx("dsunfreez", 2000, 0, "i", playerid);//разморозить игрока
	SetTimerEx("dsrepair", 5000, 0, "i", playerid);//однократный ремонт транспорта
	return 1;
}

forward dssysvehfunc(carplay);
public dssysvehfunc(carplay)
{
	new para1 = 0;
	for(new i; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
		{
			if(dsstate[i] != 0 && dscarid[i] != -600)//если игрок находится на дерби-сумо, И у него есть транспорт, то:
			{
				if(dscarid[i] == carplay)//если ИД удаляемого транспорта есть в дерби-сумо, то:
				{
					para1 = 1;//возвращаем 1 (иначе, возвращаем 0)
				}
			}
		}
	}
    return para1;
}

forward dssysplfunc(playerid);
public dssysplfunc(playerid)
{
	new para1 = 0;
	if(dsstate[playerid] != 0)//если игрок находится на дерби-сумо, то:
	{
		para1 = 1;//возвращаем 1 (иначе, возвращаем 0)
	}
    return para1;
}

forward dsrepair(playerid);
public dsrepair(playerid)//починка транспорта
{
	new car = GetPlayerVehicleID(playerid);
	RepairVehicle(car);
	SetVehicleHealth(car, 1000);
	return 1;
}

forward dsunlock(playerid);
public dsunlock(playerid)//отключение блокировки контроля игрока
{
	dslock[playerid] = 0;
	return 1;
}

forward dsunfreez(playerid);
public dsunfreez(playerid)//разморозить игрока
{
	TogglePlayerControllable(playerid, 1);
	return 1;
}

forward playrespawn(playerid);
public playrespawn(playerid)//респавн игрока
{
	dslock[playerid] = 1;//блокировка контроля игрока
	new pararnd;
	pararnd = random(9);
#if (FS11INS == 2)
	SetPVarInt(playerid, "PlCRTp", 1);
#endif
	SetPlayerPos(playerid, dsplayspax[pararnd], dsplayspay[pararnd], dsplayspaz[pararnd]);//случайное ТП игрока на дерби-сумо
	SetTimerEx("playrespawn22", 300, 0, "i", playerid);
	return 1;
}

forward playrespawn22(playerid);
public playrespawn22(playerid)//респавн игрока - 2
{
	new Float:plx, Float:ply, Float:plz;
	GetPlayerPos(playerid, plx, ply, plz);
	if(dscarid[playerid] != -600) { DestroyVehicle(dscarid[playerid]); }
	dscarid[playerid] = CreateVehicle(dscarmodel[playerid], plx, ply, plz+1, 0.0, -1, -1, 90000);//даём транспорт игроку
	LinkVehicleToInterior(dscarid[playerid], GetPlayerInterior(playerid));//подключаем транспорт к интерьеру игрока
	SetVehicleVirtualWorld(dscarid[playerid], GetPlayerVirtualWorld(playerid));//устанавливаем транспорту виртуальный мир игрока
	PutPlayerInVehicle(playerid, dscarid[playerid], 0);
	dslive[playerid]--;//жизнь -1
	if(dsstate[playerid] == 1)//если игрок дрифтер, то:
	{
		new para1, para2;
		para1 = dsgen2 + dsgen3;
		if(para1 > 0)//если общее число полицейских и колхозников больше нуля, то:
		{
#if (FS11INS == 1)
			GivePlayerMoney(playerid, - 200);//списывание 200 $ со счёта дрифтера
#endif
#if (FS11INS == 2)
			SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 200);//списывание 200 $ со счёта дрифтера
#endif
		    para2 = 200 / para1;//вычисление суммы для каждого полицейского и колхозника
			for(new i = 0; i < MAX_PLAYERS; i++)//цикл для всех игроков
			{
				if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
				{
					if(dsstate[i] == 2 || dsstate[i] == 3)
					{
#if (FS11INS == 1)
						GivePlayerMoney(i, para2);//передача денег полицейскому или колхознику
#endif
#if (FS11INS == 2)
						SetPVarInt(i, "PlMon", GetPVarInt(i, "PlMon") + para2);//передача денег полицейскому или колхознику
#endif
					}
				}
			}
		}
	}
	if(dsstate[playerid] == 2)//если игрок полицейский, то:
	{
		new para1, para2;
		para1 = dsgen1 + dsgen3;
		if(para1 > 0)//если общее число дрифтеров и колхозников больше нуля, то:
		{
#if (FS11INS == 1)
			GivePlayerMoney(playerid, - 200);//списывание 200 $ со счёта полицейского
#endif
#if (FS11INS == 2)
			SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 200);//списывание 200 $ со счёта полицейского
#endif
		    para2 = 200 / para1;//вычисление суммы для каждого дрифтера и колхозника
			for(new i = 0; i < MAX_PLAYERS; i++)//цикл для всех игроков
			{
				if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
				{
					if(dsstate[i] == 1 || dsstate[i] == 3)
					{
#if (FS11INS == 1)
						GivePlayerMoney(i, para2);//передача денег дрифтеру или колхознику
#endif
#if (FS11INS == 2)
						SetPVarInt(i, "PlMon", GetPVarInt(i, "PlMon") + para2);//передача денег дрифтеру или колхознику
#endif
					}
				}
			}
		}
	}
	if(dsstate[playerid] == 3)//если игрок колхозник, то:
	{
		new para1, para2;
		para1 = dsgen1 + dsgen2;
		if(para1 > 0)//если общее число дрифтеров и полицейских больше нуля, то:
		{
#if (FS11INS == 1)
			GivePlayerMoney(playerid, - 200);//списывание 200 $ со счёта колхозника
#endif
#if (FS11INS == 2)
			SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") - 200);//списывание 200 $ со счёта колхозника
#endif
		    para2 = 200 / para1;//вычисление суммы для каждого полицейского и колхозника
			for(new i = 0; i < MAX_PLAYERS; i++)//цикл для всех игроков
			{
				if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
				{
					if(dsstate[i] == 1 || dsstate[i] == 2)
					{
#if (FS11INS == 1)
						GivePlayerMoney(i, para2);//передача денег дрифтеру или полицейскому
#endif
#if (FS11INS == 2)
						SetPVarInt(i, "PlMon", GetPVarInt(i, "PlMon") + para2);//передача денег дрифтеру или полицейскому
#endif
					}
				}
			}
		}
	}
	new string[256];
	new sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	format(string, sizeof(string), " Игрок %s [%d] потерял жизнь, осталось %d .", sendername, playerid, dslive[playerid]);
	SendDSMessage(COLOR_YELLOW, string);
	SetTimerEx("dsunlock", 1000, 0, "i", playerid);//отключение блокировки контроля игрока
	SetTimerEx("dsrepair", 3000, 0, "i", playerid);//однократный ремонт транспорта
	return 1;
}

forward playexit(playerid);
public playexit(playerid)//выход игрока (отключение от дерби-сумо)
{
	if(dsstate[playerid] == 1) { dsgen1--; }
	if(dsstate[playerid] == 2) { dsgen2--; }
	if(dsstate[playerid] == 3) { dsgen3--; }
	dsstate[playerid] = 0;//очистка дерби-сумо статуса игрока
	dsbonus[playerid] = -600;//очистка ИД бонуса игрока
	SetPVarInt(playerid, "PlConRepDS", 0);//включаем авторемонт

	PlayerTextDrawHide(playerid, CountLive[playerid]);//текст-дравы жизней игроков
	TextDrawHideForPlayer(playerid, Live);

	dslive[playerid] = 0;//устанавливаем 0 жизней
	if(dscarid[playerid] != -600)//если есть транспорт у участника дерби-сумо, то:
	{
		DestroyVehicle(dscarid[playerid]);//удаляем транспорт
		dscarid[playerid] = -600;//очистка ИД транспорта участника дерби-сумо
	}
	SetPlayerColor(playerid, mapcolpl[playerid]);
   	for(new i = 0; i < MAX_PLAYERS; i++)//возвращаем игроку цвета маркера
	{
		SetPlayerMarkerForPlayer(i, playerid, mapcolpl[playerid]);
	}
#if (FS11INS == 1)
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerPos(playerid, corpl[playerid][0], corpl[playerid][1], corpl[playerid][2]+3.0);
	SetCameraBehindPlayer(playerid);
#endif
#if (FS11INS == 2)
	if(GetPVarInt(playerid, "SecPris") == 0)//если игрок НЕ сидит в тюрьме, то:
	{
		SetPVarInt(playerid, "PlCRTp", 1);
	 	SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, corpl[playerid][0], corpl[playerid][1], corpl[playerid][2]+3.0);
		SetCameraBehindPlayer(playerid);
	}
#endif
	new string[256];
	new sendername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, sendername, sizeof(sendername));
	format(string, sizeof(string), " Игрок %s [%d] вышел из дерби-сумо.", sendername, playerid);
	SendDSMessage(COLOR_RED, string);
	SendClientMessage(playerid, COLOR_RED, " Вы вышли из дерби-сумо.");
	new aa333[64];//доработка для использования Русских ников
	format(aa333, sizeof(aa333), "%s", sendername);//доработка для использования Русских ников
	printf("[Derby] Игрок %s [%d] вышел из дерби-сумо.", aa333, playerid);//доработка для использования Русских ников
//	printf("[Derby] Игрок %s [%d] вышел из дерби-сумо.", sendername, playerid);
	return 1;
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	if(GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 9990 && dsstate[playerid] != 0)
	{
		if(pickupid == dsPickupID[0])
		{
			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			DestroyDynamicPickup(dsPickupID[0]);//удаляем пикап
			dsbonus[playerid] = dsPickupID22[0];//создаём ИД бонуса игрока
			dsPickupID[0] = -600;//очищаем ИД пикапа
			dsPickupID44[0] = -600;//очищаем условную позицию спавна пикапа
			dsPickupcount--;//число рабочих пикапов -1
		}
		if(pickupid == dsPickupID[1])
		{
			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			DestroyDynamicPickup(dsPickupID[1]);//удаляем пикап
			dsbonus[playerid] = dsPickupID22[1];//создаём ИД бонуса игрока
			dsPickupID[1] = -600;//очищаем ИД пикапа
			dsPickupID44[1] = -600;//очищаем условную позицию спавна пикапа
			dsPickupcount--;//число рабочих пикапов -1
		}
		if(pickupid == dsPickupID[2])
		{
			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			DestroyDynamicPickup(dsPickupID[2]);//удаляем пикап
			dsbonus[playerid] = dsPickupID22[2];//создаём ИД бонуса игрока
			dsPickupID[2] = -600;//очищаем ИД пикапа
			dsPickupID44[2] = -600;//очищаем условную позицию спавна пикапа
			dsPickupcount--;//число рабочих пикапов -1
		}
		if(dsbonus[playerid] == 0)//бонус 0 (починка транспорта)
		{
			SendClientMessage(playerid, COLOR_GREEN, " Вы получили бонус починки транспорта !");
			dsrepair(playerid);
			dsbonus[playerid] = -600;//очищаем ИД бонуса игрока
		}
		if(dsbonus[playerid] == 1)//бонус 1 (взрыв в радиусе 20)
		{
			SendClientMessage(playerid, COLOR_GREEN, " Вы получили бонус: взрыв в радиусе 20 к.е. !");
			SendClientMessage(playerid, COLOR_GREEN, " Для взрыва нажмите ''N'' !");
		}
		if(dsbonus[playerid] == 2)//бонус 2 (выкинуть игроков из транспорта в радиусе 20)
		{
			SendClientMessage(playerid, COLOR_GREEN, " Вы получили бонус: выкинуть игроков из транспорта в радиусе 20 к.е. !");
			SendClientMessage(playerid, COLOR_GREEN, " Для выкидывания игроков нажмите ''N'' !");
		}
		if(dsbonus[playerid] == 3)//бонус 3 (замена транспорта - 1)
		{
			SendClientMessage(playerid, COLOR_GREEN, " Вы получили бонус замены транспорта - 1 !");
			new Float:plx, Float:ply, Float:plz, Float:angle;
			if(dsidpara1[playerid] == 1) { dscarmodel[playerid] = 579; }
			if(dsidpara1[playerid] == 2) { dscarmodel[playerid] = 599; }
			if(dsidpara1[playerid] == 3) { dscarmodel[playerid] = 400; }
			GetVehicleZAngle(dscarid[playerid], angle);
			GetPlayerPos(playerid, plx, ply, plz);
			if(dscarid[playerid] != -600) { DestroyVehicle(dscarid[playerid]); }
			dscarid[playerid] = CreateVehicle(dscarmodel[playerid], plx, ply, plz+1, angle, -1, -1, 90000);//даём транспорт игроку
			LinkVehicleToInterior(dscarid[playerid], GetPlayerInterior(playerid));//подключаем транспорт к интерьеру игрока
			SetVehicleVirtualWorld(dscarid[playerid], GetPlayerVirtualWorld(playerid));//устанавливаем транспорту виртуальный мир игрока
			PutPlayerInVehicle(playerid, dscarid[playerid], 0);
			SetTimerEx("dsrepair", 2000, 0, "i", playerid);//однократный ремонт транспорта
			dsbonus[playerid] = -600;//очищаем ИД бонуса игрока
		}
		if(dsbonus[playerid] == 4)//бонус 4 (замена транспорта - 2)
		{
			SendClientMessage(playerid, COLOR_GREEN, " Вы получили бонус замены транспорта - 2 !");
			new Float:plx, Float:ply, Float:plz, Float:angle;
			if(dsidpara1[playerid] == 1) { dscarmodel[playerid] = 428; }
			if(dsidpara1[playerid] == 2) { dscarmodel[playerid] = 427; }
			if(dsidpara1[playerid] == 3) { dscarmodel[playerid] = 444; }
			GetVehicleZAngle(dscarid[playerid], angle);
			GetPlayerPos(playerid, plx, ply, plz);
			if(dscarid[playerid] != -600) { DestroyVehicle(dscarid[playerid]); }
			dscarid[playerid] = CreateVehicle(dscarmodel[playerid], plx, ply, plz+1, angle, -1, -1, 90000);//даём транспорт игроку
			LinkVehicleToInterior(dscarid[playerid], GetPlayerInterior(playerid));//подключаем транспорт к интерьеру игрока
			SetVehicleVirtualWorld(dscarid[playerid], GetPlayerVirtualWorld(playerid));//устанавливаем транспорту виртуальный мир игрока
			PutPlayerInVehicle(playerid, dscarid[playerid], 0);
			SetTimerEx("dsrepair", 2000, 0, "i", playerid);//однократный ремонт транспорта
			dsbonus[playerid] = -600;//очищаем ИД бонуса игрока
		}
		if(pickupid == PickupIDin[0])
		{
			dslock[playerid] = 1;//блокировка контроля игрока
			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			DestroyDynamicPickup(PickupIDin[0]);//удаляем пикап
			PickupIDin[0] = -600;//очищаем ИД пикапа
#if (FS11INS == 2)
			SetPVarInt(playerid, "PlCRTp", 1);
#endif
			SetPlayerPos(playerid, -981.91, -925.13, 2215.12);//ТП по внутреннему пикап-телепорту
			SetTimerEx("intlp", 300, 0, "i", playerid);
		}
		if(pickupid == PickupIDin[1])
		{
			dslock[playerid] = 1;//блокировка контроля игрока
			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			DestroyDynamicPickup(PickupIDin[1]);//удаляем пикап
			PickupIDin[1] = -600;//очищаем ИД пикапа
#if (FS11INS == 2)
			SetPVarInt(playerid, "PlCRTp", 1);
#endif
			SetPlayerPos(playerid, -981.91, -925.13, 2215.12);//ТП по внутреннему пикап-телепорту
			SetTimerEx("intlp", 300, 0, "i", playerid);
		}
	}
	else
	{
		if(pickupid == dsPickupID[0])
		{
			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			DestroyDynamicPickup(dsPickupID[0]);//удаляем пикап
			dsPickupID[0] = -600;//очищаем ИД пикапа
			dsPickupID44[0] = -600;//очищаем условную позицию спавна пикапа
			dsPickupcount--;//число рабочих пикапов -1
		}
		if(pickupid == dsPickupID[1])
		{
			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			DestroyDynamicPickup(dsPickupID[1]);//удаляем пикап
			dsPickupID[1] = -600;//очищаем ИД пикапа
			dsPickupID44[1] = -600;//очищаем условную позицию спавна пикапа
			dsPickupcount--;//число рабочих пикапов -1
		}
		if(pickupid == dsPickupID[2])
		{
			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			DestroyDynamicPickup(dsPickupID[2]);//удаляем пикап
			dsPickupID[2] = -600;//очищаем ИД пикапа
			dsPickupID44[2] = -600;//очищаем условную позицию спавна пикапа
			dsPickupcount--;//число рабочих пикапов -1
		}
	}
	return 1;
}

forward intlp(playerid);
public intlp(playerid)//внутренний пикап-телепорт
{
	new Float:plx, Float:ply, Float:plz;
	GetPlayerPos(playerid, plx, ply, plz);
	if(dscarid[playerid] != -600) { DestroyVehicle(dscarid[playerid]); }
	dscarid[playerid] = CreateVehicle(dscarmodel[playerid], plx, ply, plz+1, 0.0, -1, -1, 90000);//даём транспорт игроку
	LinkVehicleToInterior(dscarid[playerid], GetPlayerInterior(playerid));//подключаем транспорт к интерьеру игрока
	SetVehicleVirtualWorld(dscarid[playerid], GetPlayerVirtualWorld(playerid));//устанавливаем транспорту виртуальный мир игрока
	PutPlayerInVehicle(playerid, dscarid[playerid], 0);

	SetTimerEx("dsunlock", 1000, 0, "i", playerid);//отключение блокировки контроля игрока
	SetTimerEx("dsrepair", 3000, 0, "i", playerid);//однократный ремонт транспорта
	return 1;
}

forward MovObj();
public MovObj()//функция вращения объекта
{
	if(posmoveobj == 1) { MoveDynamicObject(moveobj, -979.3382, -1078.941, 1991.234+0.05, 0.05, 0.00000, 0.00000, 90.00000); }
	if(posmoveobj == 2) { MoveDynamicObject(moveobj, -979.3382, -1078.941, 1991.234-0.05, 0.05, 0.00000, 0.00000, 180.00000); }
	if(posmoveobj == 3) { MoveDynamicObject(moveobj, -979.3382, -1078.941, 1991.234+0.05, 0.05, 0.00000, 0.00000, 270.00000); }
	if(posmoveobj == 4) { MoveDynamicObject(moveobj, -979.3382, -1078.941, 1991.234-0.05, 0.05, 0.00000, 0.00000, 0.00000); }
	return 1;
}

public OnDynamicObjectMoved(objectid)
{
	if(objectid == moveobj)
	{
		posmoveobj++;
		if(posmoveobj == 5) { posmoveobj = 1; }
		MovObj();//вызов функции вращения объекта
	}
	return 1;
}

public OneSec()
{
	new Float:plx, Float:ply, Float:plz;
	for(new i = 0; i < MAX_PLAYERS; i++)//цикл для всех игроков
	{
		if(IsPlayerConnected(i))//дальнейшее выполняем если игрок в коннекте
		{
			if(dsstate[i] != 0)
			{
				new string[64];//текст-дравы жизней игроков
				format(string, sizeof(string), "%d", dslive[i]);
				PlayerTextDrawSetString(i, CountLive[i], string);

				GetPlayerPos(i, plx, ply, plz);
				if(-1201 < plx < -762 && -1296 < ply < -801 && 1940 < plz < 2261)
				{//если игрок находится на карте дерби-сумо, то:
					if(GetPlayerState(i) != 2 && dslock[i] == 0 && dslive[i] > 1)
					{
						playrespawn(i);
					}
					if(GetPlayerState(i) != 2 && dslock[i] == 0 && dslive[i] <= 1)
					{
						playexit(i);
					}
				}
				if(-1401 < plx < -562 && -1496 < ply < -601 && 1000 < plz < 1940)
				{//если игрок упал (вылетел) с карты дерби-сумо, то:
					if(dslive[i] > 1)
					{
						playrespawn(i);
					}
					if(dslive[i] <= 1)
					{
						playexit(i);
					}
				}
				if((plx < -1401 || plx > -562) && (ply < -1496 || ply > -601) && (plz < 1000 || plz > 2261))
				{//если игрок находится за пределами карты дерби-сумо, то:
					playexit(i);
				}
			}
		}
	}
	if(dsPickupcount < 3)//если число рабочих пикапов меньше 3-х, то:
	{
		if(dsPickupcount44 == 1)
		{
			new para1 = 0;
			while(para1 < 3)
			{
				if(dsPickupID[para1] == -600)
				{//если пикап не создан, то:
					break;//завершаем неполный цикл
				}
				para1++;
			}
			new pararnd1, pararnd2;
			pararnd1 = random(5);//случайный тип пикапа
			pararnd2 = random(9);//случайные координаты пикапа
			if(pararnd2 != dsPickupID44[0] && pararnd2 != dsPickupID44[1] && pararnd2 != dsPickupID44[2])
			{//если случайные координаты НЕ равны одной из условных позиций спавнов пикапов, то:
				dsPickupID[para1] = CreateDynamicPickup(dsPickupspawn[pararnd1], 14,
				dspickupx[pararnd2], dspickupy[pararnd2], dspickupz[pararnd2], 9990, 0, -1, 500.0);//создаём пикап
				dsPickupID22[para1] = pararnd1;//запоминаем тип пикапа
				dsPickupID44[para1] = pararnd2;//запоминаем условную позицию спавна пикапа
				dsPickupcount++;//число рабочих пикапов +1
			}
			dsPickupcount44 = 0;
		}
		else
		{
			dsPickupcount44++;
		}
	}
	if(PickupIDin[0] == -600)
	{
		PickupIDin[0] = CreateDynamicPickup(19198, 14, -979.20, -1084.89, 1991.0, 9990, 0, -1, 100.0);//создаём внутренний пикап-телепорт 1
	}
	if(PickupIDin[1] == -600)
	{
		PickupIDin[1] = CreateDynamicPickup(19198, 14, -979.37, -1072.86, 1991.0, 9990, 0, -1, 100.0);//создаём внутренний пикап-телепорт 2
	}
	return 1;
}

#if (FS11INS == 2)
	forward FCislit(cislo);
	public FCislit(cislo)
	{
		new para, para22, string[256], string22[4], string33[4];
		strdel(string22, 0, 4);
		strdel(string33, 0, 4);
		format(string, sizeof(string), "%d", cislo);
		para22 = strlen(string);
		if(para22 == 1)
		{
			strmid(string22, string, para22-1, para22, sizeof(string22));
		}
		else
		{
	    	strmid(string22, string, para22-1, para22, sizeof(string22));
	    	strmid(string33, string, para22-2, para22-1, sizeof(string33));
		}
		para22 = strval(string33);
		if(para22 > 1) { para22 = 0; }
		para22 = para22 * 10 + strval(string22);
		switch(para22)
		{
			case 0,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19: para = 0;
			case 1: para = 1;
			case 2,3,4: para = 2;
		}
		return para;
	}
#endif

